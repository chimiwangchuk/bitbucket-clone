var ValidationUtil = /** @class */ (function () {
    function ValidationUtil() {
    }
    ValidationUtil.checkExists = function (objectName, object) {
        if (!object) {
            throw new Error(objectName + " does not exist.");
        }
    };
    ValidationUtil.checkPropertyExists = function (objectName, object, propertyName) {
        var objectProperty = object[propertyName];
        if (!objectProperty) {
            throw new Error("Expected " + objectName + " to have a property: " + propertyName + ".");
        }
        if (ValidationUtil.isFunction(objectProperty)) {
            throw new Error(objectName + " has a property " + propertyName + ", but it is a function.");
        }
    };
    ValidationUtil.checkFunctionExists = function (objectName, object, functionName) {
        var objectProperty = object[functionName];
        if (!objectProperty) {
            throw new Error("Expected " + objectName + " to have a function: " + functionName + ".");
        }
        if (!ValidationUtil.isFunction(objectProperty)) {
            var objectPropertyTypeInfo = typeof objectProperty + ' (value: ' + objectProperty + ')';
            throw new Error(objectName + " has a property " + functionName + ", but it is a " + objectPropertyTypeInfo + " rather than a function.");
        }
    };
    ValidationUtil.isFunction = function (object) {
        return typeof (object) === 'function';
    };
    return ValidationUtil;
}());
export { ValidationUtil };
export default ValidationUtil;
//# sourceMappingURL=ValidationUtil.js.map