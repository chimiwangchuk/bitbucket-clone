import { parseUrl, stringify } from 'query-string';
import { pickBy, omitBy, } from './objectUtils';
export var defaultHistoryReplaceFn = function (newUrl) { return window.history.replaceState({}, '', newUrl); };
var urlParamExtractor = function (isCaptureParam, historyReplaceFn) {
    if (historyReplaceFn === void 0) { historyReplaceFn = defaultHistoryReplaceFn; }
    // Extract target parameters and values from URL if present
    var originalUrl = window.location.href;
    var fragmentHash = window.location.hash;
    var removedFragmentURL = (fragmentHash !== '') ? originalUrl.replace(fragmentHash, '') : originalUrl;
    var _a = parseUrl(removedFragmentURL), url = _a.url, query = _a.query;
    var captureParams = pickBy(query, isCaptureParam);
    // Do not modify URL if no matches
    if (Object.keys(captureParams).length > 0) {
        var queryWithoutCaptureParams = omitBy(query, isCaptureParam);
        // Replace the URL minus captured parameters
        if (Object.keys(queryWithoutCaptureParams).length > 0) {
            var newUrl = url + "?" + stringify(queryWithoutCaptureParams) + fragmentHash;
            historyReplaceFn(newUrl);
        }
        else {
            historyReplaceFn("" + url + fragmentHash);
        }
    }
    return captureParams;
};
export default urlParamExtractor;
