/* eslint-disable no-return-assign, no-sequences */
// https://30secondsofcode.org/object#mapkeys
var mapKeys = function (obj, fn) {
    return Object.keys(obj).reduce(function (acc, k) {
        acc[fn(obj[k], k, obj)] = obj[k];
        return acc;
    }, {});
};
// https://30secondsofcode.org/object#pick
var pick = function (obj, arr) {
    return arr.reduce(function (acc, curr) { return (curr in obj && (acc[curr] = obj[curr]), acc); }, {});
};
// https://30secondsofcode.org/object#omitBy
var omitBy = function (obj, fn) {
    return Object.keys(obj)
        .filter(function (k) { return !fn(obj[k], k); })
        .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});
};
// https://30secondsofcode.org/object#pickBy
var pickBy = function (obj, fn) {
    return Object.keys(obj)
        .filter(function (k) { return fn(obj[k], k); })
        .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});
};
// https://30secondsofcode.org/object#omit
var omit = function (obj, arr) {
    return Object.keys(obj)
        .filter(function (k) { return arr.indexOf(k) < 0; })
        .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});
};
export { mapKeys, pick, pickBy, omitBy, omit, };
