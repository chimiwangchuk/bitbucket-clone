"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var hash_1 = tslib_1.__importDefault(require("../util/hash"));
exports.ONE_HOUR = 1000 * 60 * 60;
var ExposureEvents = /** @class */ (function () {
    function ExposureEvents(analyticsWebClient) {
        this.spamBuster = {};
        this.analyticsWebClient = analyticsWebClient;
    }
    ExposureEvents.prototype.sendExposureEvent = function (flagKey, value, evaluationDetail, exposureData) {
        var _a, _b, _c;
        var attributes = tslib_1.__assign(tslib_1.__assign({}, exposureData), { flagKey: flagKey, reason: (_a = evaluationDetail) === null || _a === void 0 ? void 0 : _a.reason, ruleId: (_b = evaluationDetail) === null || _b === void 0 ? void 0 : _b.ruleId, errorKind: (_c = evaluationDetail) === null || _c === void 0 ? void 0 : _c.errorKind, value: value });
        if (this.shouldSendEvent(attributes)) {
            this.analyticsWebClient.sendOperationalEvent({
                actionSubject: 'feature',
                action: 'exposed',
                attributes: attributes,
                tags: ['measurement'],
                source: '@atlassiansox/feature-flag-web-client',
            });
        }
    };
    ExposureEvents.prototype.shouldSendEvent = function (attributes) {
        var hash = hash_1.default(attributes);
        if (this.spamBuster[hash] === undefined || this.spamBuster[hash] + exports.ONE_HOUR < Date.now()) {
            this.spamBuster[hash] = Date.now();
            return true;
        }
        return false;
    };
    return ExposureEvents;
}());
exports.default = ExposureEvents;
