"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var rxjs_async_map_1 = require("rxjs-async-map");
function arrayBufferToHex(buffer) {
    return Array.prototype.map.call(new Uint8Array(buffer), function (x) { return ('00' + x.toString(16)).slice(-2); }).join('');
}
function blobToArrayBuffer(blob) {
    var fileReader = new FileReader();
    return new Promise(function (resolve, reject) {
        fileReader.onload = function () {
            resolve(this.result);
        };
        fileReader.onerror = reject;
        fileReader.readAsArrayBuffer(blob);
    });
}
exports.defaultHasher = function (blob) {
    return blobToArrayBuffer(blob)
        .then(function (arrayBuffer) { return crypto.subtle.digest('SHA-1', arrayBuffer); })
        .then(arrayBufferToHex);
};
exports.blobToHashedBlob = function (hasher) { return function (blob) {
    return hasher(blob)
        .then(function (hash) { return ({ blob: blob, hash: hash + "-" + blob.size }); });
}; };
exports.hashinator = function (blobs$, _a) {
    var hasher = _a.hasher, concurrency = _a.concurrency;
    return rxjs_async_map_1.asyncMap(exports.blobToHashedBlob(hasher || exports.defaultHasher), concurrency)(blobs$);
};
//# sourceMappingURL=hashinator.js.map