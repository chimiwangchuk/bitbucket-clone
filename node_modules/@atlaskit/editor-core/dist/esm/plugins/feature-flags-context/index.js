import { __assign } from "tslib";
import { Plugin, PluginKey } from 'prosemirror-state';
export var pluginKey = new PluginKey('featureFlagsContextPlugin');
var featureFlagsContextPlugin = function (featureFlags) {
    if (featureFlags === void 0) { featureFlags = {}; }
    return ({
        name: 'featureFlagsContext',
        pmPlugins: function () {
            return [
                {
                    name: 'featureFlagsContext',
                    plugin: function () {
                        return new Plugin({
                            key: pluginKey,
                            state: {
                                init: function () { return (__assign({}, featureFlags)); },
                                apply: function (_, pluginState) { return pluginState; },
                            },
                        });
                    },
                },
            ];
        },
    });
};
export var getFeatureFlags = function (state) {
    return pluginKey.getState(state);
};
export default featureFlagsContextPlugin;
//# sourceMappingURL=index.js.map