import { __read } from "tslib";
import { updateNodeDecorations, createResizeHandleDecoration, } from '../utils/decoration';
import { TableDecorations } from '../types';
import { buildDecorationSet } from './utils';
var updateColumnResizeHandle = function (columnResizesDecorations) { return function (_a) {
    var decorationSet = _a.decorationSet, tr = _a.tr;
    return updateNodeDecorations(tr.doc, decorationSet, columnResizesDecorations, TableDecorations.COLUMN_RESIZING_HANDLE);
}; };
var updateLastCellElement = function (lastCellElementsDecorations) { return function (_a) {
    var decorationSet = _a.decorationSet, tr = _a.tr;
    return updateNodeDecorations(tr.doc, decorationSet, lastCellElementsDecorations, TableDecorations.LAST_CELL_ELEMENT);
}; };
var emptyDecorations = [[], []];
export var buildColumnResizingDecorationSet = function (columnEndIndex) { return function (_a) {
    var tr = _a.tr, decorationSet = _a.decorationSet;
    var _b = __read(columnEndIndex < 0
        ? emptyDecorations
        : createResizeHandleDecoration(tr, { right: columnEndIndex }), 2), columnResizesDecorations = _b[0], lastCellElementsDecorations = _b[1];
    return buildDecorationSet([
        updateColumnResizeHandle(columnResizesDecorations),
        updateLastCellElement(lastCellElementsDecorations),
    ])({ decorationSet: decorationSet, tr: tr });
}; };
//# sourceMappingURL=build-column-resizing-decoration-set.js.map