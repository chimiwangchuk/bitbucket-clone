import React from 'react';
import { expand, nestedExpand } from '@atlaskit/adf-schema';
import { createPlugin } from './pm-plugins/main';
import { expandKeymap } from './pm-plugins/keymap';
import { IconExpand } from '../quick-insert/assets';
import { ACTION, ACTION_SUBJECT, ACTION_SUBJECT_ID, addAnalytics, EVENT_TYPE, INPUT_METHOD, } from '../analytics';
import { getToolbarConfig } from './toolbar';
import { createExpandNode } from './commands';
import { messages } from '../insert-block/ui/ToolbarInsertBlock/messages';
var expandPlugin = function (options) { return ({
    name: 'expand',
    nodes: function () {
        return [
            { name: 'expand', node: expand },
            { name: 'nestedExpand', node: nestedExpand },
        ];
    },
    pmPlugins: function () {
        return [
            {
                name: 'expand',
                plugin: function (_a) {
                    var dispatch = _a.dispatch, reactContext = _a.reactContext;
                    return createPlugin(dispatch, reactContext);
                },
            },
            {
                name: 'expandKeymap',
                plugin: expandKeymap,
            },
        ];
    },
    pluginsOptions: {
        floatingToolbar: getToolbarConfig,
        quickInsert: function (_a) {
            var formatMessage = _a.formatMessage;
            if (options && options.allowInsertion !== true) {
                return [];
            }
            return [
                {
                    title: formatMessage(messages.expand),
                    description: formatMessage(messages.expandDescription),
                    priority: 600,
                    icon: function () { return React.createElement(IconExpand, { label: formatMessage(messages.expand) }); },
                    action: function (insert, state) {
                        var node = createExpandNode(state);
                        var tr = insert(node);
                        return addAnalytics(state, tr, {
                            action: ACTION.INSERTED,
                            actionSubject: ACTION_SUBJECT.DOCUMENT,
                            actionSubjectId: node.type === state.schema.nodes.nestedExpand
                                ? ACTION_SUBJECT_ID.NESTED_EXPAND
                                : ACTION_SUBJECT_ID.EXPAND,
                            attributes: { inputMethod: INPUT_METHOD.QUICK_INSERT },
                            eventType: EVENT_TYPE.TRACK,
                        });
                    },
                },
            ];
        },
    },
}); };
export default expandPlugin;
export { pluginKey } from './pm-plugins/main';
export function isExpandInsertionEnabled(_a) {
    var allowExpand = _a.allowExpand;
    if (allowExpand && typeof allowExpand === 'object') {
        return !!allowExpand.allowInsertion;
    }
    return false;
}
//# sourceMappingURL=index.js.map