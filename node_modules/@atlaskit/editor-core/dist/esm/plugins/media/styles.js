import { __makeTemplateObject } from "tslib";
import { css } from 'styled-components';
import { mediaSingleSharedStyle, mediaSingleClassName, akEditorDeleteBorder, akEditorDeleteBackground, akEditorSelectedBorderBoldSize, akEditorMediaResizeHandlerPaddingWide, akEditorMediaResizeHandlerPadding, } from '@atlaskit/editor-common';
import { colors } from '@atlaskit/theme';
export var mediaStyles = css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  .ProseMirror {\n    ", " & [layout='full-width'] .", ",\n    & [layout='wide'] .", " {\n      margin-left: 50%;\n      transform: translateX(-50%);\n    }\n\n    & [layout^='wrap-'] + [layout^='wrap-'] {\n      clear: none;\n      & + p,\n      & + div[class^='fabric-editor-align'],\n      & + ul,\n      & + ol,\n      & + h1,\n      & + h2,\n      & + h3,\n      & + h4,\n      & + h5,\n      & + h6 {\n        clear: both !important;\n      }\n      & .", " {\n        margin-left: 0;\n        margin-right: 0;\n      }\n    }\n\n    /* Larger margins for resize handlers when at depth 0 of the document */\n    & > .mediaSingleView-content-wrap {\n      .mediaSingle-resize-handle-right {\n        margin-right: -", "px;\n      }\n      .mediaSingle-resize-handle-left {\n        margin-left: -", "px;\n      }\n    }\n  }\n\n  .mediaSingle-resize-handle-right,\n  .mediaSingle-resize-handle-left {\n    display: flex;\n    flex-direction: column;\n\n    /* vertical align */\n    justify-content: center;\n  }\n\n  .mediaSingle-resize-handle-right {\n    align-items: flex-end;\n    padding-right: 12px;\n    margin-right: -", "px;\n  }\n\n  .mediaSingle-resize-handle-left {\n    align-items: flex-start;\n    padding-left: 12px;\n    margin-left: -", "px;\n  }\n\n  .mediaSingle-resize-handle-right::after,\n  .mediaSingle-resize-handle-left::after {\n    content: ' ';\n    display: flex;\n    width: 3px;\n    height: 64px;\n\n    border-radius: 6px;\n  }\n\n  .", ":hover .mediaSingle-resize-handle-left::after,\n  .", ":hover .mediaSingle-resize-handle-right::after {\n    background: ", ";\n  }\n\n  .mediaSingle-selected .mediaSingle-resize-handle-right::after,\n  .mediaSingle-selected .mediaSingle-resize-handle-left::after,\n  .", " .mediaSingle-resize-handle-right:hover::after,\n  .", " .mediaSingle-resize-handle-left:hover::after,\n  .", ".is-resizing .mediaSingle-resize-handle-right::after,\n  .", ".is-resizing .mediaSingle-resize-handle-left::after {\n    background: ", ";\n  }\n\n  .__resizable_base__ {\n    left: unset !important;\n    width: auto !important;\n    height: auto !important;\n  }\n\n  /* Danger when top level node for smart cards / inline links */\n  .danger > div > div > .media-card-frame,\n  .danger > span > a {\n    background-color: ", ";\n    box-shadow: 0px 0px 0px ", "px\n      ", ";\n    transition: background-color 0s;\n    transition: box-shadow 0s;\n  }\n\n  /* Danger when nested node or common */\n  .danger {\n    /* Media single */\n    .", " div div div::after {\n      border: ", "px solid ", ";\n    }\n\n    .mediaSingle-selected .mediaSingle-resize-handle-right::after,\n    .mediaSingle-selected .mediaSingle-resize-handle-left::after {\n      background: ", ";\n    }\n\n    /* Smart cards */\n    div div .media-card-frame,\n    .inlineCardView-content-wrap > span > a {\n      background-color: rgb(255, 189, 173, 0.5); /* R75 with 50% opactiy */\n      transition: background-color 0s;\n    }\n\n    div div .media-card-frame::after {\n      box-shadow: none;\n    }\n  }\n"], ["\n  .ProseMirror {\n    ", " & [layout='full-width'] .", ",\n    & [layout='wide'] .", " {\n      margin-left: 50%;\n      transform: translateX(-50%);\n    }\n\n    & [layout^='wrap-'] + [layout^='wrap-'] {\n      clear: none;\n      & + p,\n      & + div[class^='fabric-editor-align'],\n      & + ul,\n      & + ol,\n      & + h1,\n      & + h2,\n      & + h3,\n      & + h4,\n      & + h5,\n      & + h6 {\n        clear: both !important;\n      }\n      & .", " {\n        margin-left: 0;\n        margin-right: 0;\n      }\n    }\n\n    /* Larger margins for resize handlers when at depth 0 of the document */\n    & > .mediaSingleView-content-wrap {\n      .mediaSingle-resize-handle-right {\n        margin-right: -", "px;\n      }\n      .mediaSingle-resize-handle-left {\n        margin-left: -", "px;\n      }\n    }\n  }\n\n  .mediaSingle-resize-handle-right,\n  .mediaSingle-resize-handle-left {\n    display: flex;\n    flex-direction: column;\n\n    /* vertical align */\n    justify-content: center;\n  }\n\n  .mediaSingle-resize-handle-right {\n    align-items: flex-end;\n    padding-right: 12px;\n    margin-right: -", "px;\n  }\n\n  .mediaSingle-resize-handle-left {\n    align-items: flex-start;\n    padding-left: 12px;\n    margin-left: -", "px;\n  }\n\n  .mediaSingle-resize-handle-right::after,\n  .mediaSingle-resize-handle-left::after {\n    content: ' ';\n    display: flex;\n    width: 3px;\n    height: 64px;\n\n    border-radius: 6px;\n  }\n\n  .", ":hover .mediaSingle-resize-handle-left::after,\n  .", ":hover .mediaSingle-resize-handle-right::after {\n    background: ", ";\n  }\n\n  .mediaSingle-selected .mediaSingle-resize-handle-right::after,\n  .mediaSingle-selected .mediaSingle-resize-handle-left::after,\n  .", " .mediaSingle-resize-handle-right:hover::after,\n  .", " .mediaSingle-resize-handle-left:hover::after,\n  .", ".is-resizing .mediaSingle-resize-handle-right::after,\n  .", ".is-resizing .mediaSingle-resize-handle-left::after {\n    background: ", ";\n  }\n\n  .__resizable_base__ {\n    left: unset !important;\n    width: auto !important;\n    height: auto !important;\n  }\n\n  /* Danger when top level node for smart cards / inline links */\n  .danger > div > div > .media-card-frame,\n  .danger > span > a {\n    background-color: ", ";\n    box-shadow: 0px 0px 0px ", "px\n      ", ";\n    transition: background-color 0s;\n    transition: box-shadow 0s;\n  }\n\n  /* Danger when nested node or common */\n  .danger {\n    /* Media single */\n    .", " div div div::after {\n      border: ", "px solid ", ";\n    }\n\n    .mediaSingle-selected .mediaSingle-resize-handle-right::after,\n    .mediaSingle-selected .mediaSingle-resize-handle-left::after {\n      background: ", ";\n    }\n\n    /* Smart cards */\n    div div .media-card-frame,\n    .inlineCardView-content-wrap > span > a {\n      background-color: rgb(255, 189, 173, 0.5); /* R75 with 50% opactiy */\n      transition: background-color 0s;\n    }\n\n    div div .media-card-frame::after {\n      box-shadow: none;\n    }\n  }\n"])), mediaSingleSharedStyle, mediaSingleClassName, mediaSingleClassName, mediaSingleClassName, akEditorMediaResizeHandlerPaddingWide, akEditorMediaResizeHandlerPaddingWide, akEditorMediaResizeHandlerPadding, akEditorMediaResizeHandlerPadding, mediaSingleClassName, mediaSingleClassName, colors.N60, mediaSingleClassName, mediaSingleClassName, mediaSingleClassName, mediaSingleClassName, colors.B200, akEditorDeleteBackground, akEditorSelectedBorderBoldSize, akEditorDeleteBorder, mediaSingleClassName, akEditorSelectedBorderBoldSize, akEditorDeleteBorder, akEditorDeleteBorder);
var templateObject_1;
/* `left: unset` above is to work around Chrome bug where rendering a div with
 * that style applied inside a container that has a scroll, causes any svgs on
 * the page, without a border, that are inside a flexbox, to no longer align to
 * the center of their viewbox.
 *
 * for us, this means that all the toolbar icons start jumping around if
 * you make the viewport small
 */
//# sourceMappingURL=styles.js.map