import { Plugin, PluginKey } from 'prosemirror-state';
import DateNodeView from '../nodeviews/date';
import { ReactNodeView } from '../../../nodeviews';
import { pluginFactory } from '../../../utils/plugin-state-factory';
import { reducer, mapping, onSelectionChanged } from './utils';
export var pluginKey = new PluginKey('datePlugin');
var _a = pluginFactory(pluginKey, reducer, {
    mapping: mapping,
    onSelectionChanged: onSelectionChanged,
}), createPluginState = _a.createPluginState, getPluginState = _a.getPluginState;
var createPlugin = function (_a) {
    var dispatch = _a.dispatch, portalProviderAPI = _a.portalProviderAPI;
    return new Plugin({
        state: createPluginState(dispatch, { showDatePickerAt: null }),
        key: pluginKey,
        props: {
            nodeViews: {
                date: ReactNodeView.fromComponent(DateNodeView, portalProviderAPI),
            },
        },
    });
};
export { getPluginState };
export default createPlugin;
//# sourceMappingURL=main.js.map