import { __assign } from "tslib";
import { NodeSelection } from 'prosemirror-state';
export function reducer(pluginState, meta) {
    // ED-5033, calendar control open for element in plugin state, when node-view is clicked.
    // Following chanek ensures that if same node-view is clicked twice calendar should close,
    // but if a different node-view is clicked, calendar should open next the that node-view.
    if (meta.showDatePickerAt === pluginState.showDatePickerAt) {
        return __assign(__assign({}, pluginState), { showDatePickerAt: null });
    }
    else {
        return __assign(__assign({}, pluginState), meta);
    }
}
export function mapping(tr, pluginState) {
    if (!pluginState.showDatePickerAt) {
        return pluginState;
    }
    var _a = tr.mapping.mapResult(pluginState.showDatePickerAt), pos = _a.pos, deleted = _a.deleted;
    return {
        showDatePickerAt: deleted ? null : pos,
    };
}
export function onSelectionChanged(tr, pluginState) {
    if (pluginState.showDatePickerAt &&
        !(tr.selection instanceof NodeSelection)) {
        return { showDatePickerAt: null };
    }
    return pluginState;
}
//# sourceMappingURL=utils.js.map