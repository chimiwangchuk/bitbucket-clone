import { __extends } from "tslib";
import React from 'react';
import { ReactNodeView } from '../../nodeviews';
import WithPluginState from '../../ui/WithPluginState';
import { stateKey as reactPluginKey } from '../../plugins/base/pm-plugins/react-nodeview';
import { pluginKey as annotationPluginKey } from './pm-plugins/inline-comment';
var AnnotationNodeView = /** @class */ (function (_super) {
    __extends(AnnotationNodeView, _super);
    function AnnotationNodeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnnotationNodeView.prototype.createDomRef = function () {
        return document.createElement('span');
    };
    AnnotationNodeView.prototype.getContentDOM = function () {
        var dom = document.createElement('span');
        dom.className = 'fabric-editor-annotation';
        return { dom: dom };
    };
    AnnotationNodeView.prototype.render = function (_props, forwardRef) {
        var _this = this;
        return (React.createElement(WithPluginState, { plugins: {
                annotationState: annotationPluginKey,
                selectionState: reactPluginKey,
            }, editorView: this.view, render: function (_a) {
                var annotationState = _a.annotationState;
                var id = _this.node.attrs.id;
                return (React.createElement("span", { style: {
                        backgroundColor: annotationState[id] === false
                            ? 'rgba(255, 196, 0, 0.4)'
                            : 'transparent',
                    }, ref: forwardRef }));
            } }));
    };
    return AnnotationNodeView;
}(ReactNodeView));
export { AnnotationNodeView };
//# sourceMappingURL=ui.js.map