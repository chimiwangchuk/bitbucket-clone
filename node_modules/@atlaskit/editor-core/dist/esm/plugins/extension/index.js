import React from 'react';
import { inlineExtension, extension, bodiedExtension, } from '@atlaskit/adf-schema';
import { createPlugin, getPluginState } from './plugin';
import { getToolbarConfig } from './toolbar';
import { getSelectedExtension } from './utils';
var extensionPlugin = function (options) {
    if (options === void 0) { options = {}; }
    return ({
        name: 'extension',
        nodes: function () {
            return [
                { name: 'extension', node: extension },
                { name: 'bodiedExtension', node: bodiedExtension },
                { name: 'inlineExtension', node: inlineExtension },
            ];
        },
        pmPlugins: function () {
            return [
                {
                    name: 'extension',
                    plugin: function (_a) {
                        var dispatch = _a.dispatch, providerFactory = _a.providerFactory, portalProviderAPI = _a.portalProviderAPI;
                        var extensionHandlers = options.extensionHandlers || {};
                        return createPlugin(dispatch, providerFactory, extensionHandlers, portalProviderAPI);
                    },
                },
            ];
        },
        pluginsOptions: {
            floatingToolbar: getToolbarConfig(options.breakoutEnabled, !!options.allowNewConfigPanel),
            contextPanel: options.allowNewConfigPanel
                ? function (state) {
                    // Adding checks to bail out early
                    if (!state.selection.empty && getSelectedExtension(state)) {
                        var extensionState = getPluginState(state);
                        if (extensionState && extensionState.showContextPanel) {
                            // New config panel
                            return (React.createElement("div", null,
                                React.createElement("pre", null, JSON.stringify(state.selection.toJSON(), null, 2))));
                        }
                    }
                }
                : undefined,
        },
    });
};
export default extensionPlugin;
//# sourceMappingURL=index.js.map