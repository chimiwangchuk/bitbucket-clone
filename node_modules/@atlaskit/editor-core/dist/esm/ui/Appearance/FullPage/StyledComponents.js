import { __makeTemplateObject } from "tslib";
import styled from 'styled-components';
import { akEditorFullWidthLayoutWidth, akEditorGutterPadding, akEditorSwoopCubicBezier, akLayoutGutterOffset, } from '@atlaskit/editor-common';
import { taskListSelector, decisionListSelector } from '@atlaskit/adf-schema';
import ContentStyles from '../../ContentStyles';
import { tableFullPageEditorStyles, tableMarginFullWidthMode, } from '../../../plugins/table/ui/styles';
import { scrollbarStyles } from '../../styles';
var SWOOP_ANIMATION = "0.5s " + akEditorSwoopCubicBezier;
var TOTAL_PADDING = akEditorGutterPadding * 2;
export var FullPageEditorWrapper = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  min-width: 340px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n"], ["\n  min-width: 340px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n"])));
FullPageEditorWrapper.displayName = 'FullPageEditorWrapper';
export var ScrollContainer = styled(ContentStyles)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  flex-grow: 1;\n  height: 100%;\n  overflow-y: scroll;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  scroll-behavior: smooth;\n  ", ";\n"], ["\n  flex-grow: 1;\n  height: 100%;\n  overflow-y: scroll;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  scroll-behavior: smooth;\n  ", ";\n"])), scrollbarStyles);
ScrollContainer.displayName = 'ScrollContainer';
export var ContentArea = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: row;\n  height: calc(100% - 80px);\n  box-sizing: border-box;\n"], ["\n  display: flex;\n  flex-direction: row;\n  height: calc(100% - 80px);\n  box-sizing: border-box;\n"])));
ContentArea.displayName = 'ContentArea';
export var SidebarArea = styled.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  height: 100%;\n  box-sizing: border-box;\n  align-self: flex-end;\n"], ["\n  height: 100%;\n  box-sizing: border-box;\n  align-self: flex-end;\n"])));
SidebarArea.displayName = 'SidebarArea';
export var EditorContentArea = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  line-height: 24px;\n  padding-top: 50px;\n  padding-bottom: 55px;\n  height: calc(\n    100% - 105px\n  ); /* fill the viewport: 100% - (padding top & bottom) */\n  width: 100%;\n  margin: auto;\n  flex-direction: column;\n  flex-grow: 1;\n\n  max-width: ", "px;\n  transition: max-width ", ";\n\n  & .ProseMirror {\n    flex-grow: 1;\n    box-sizing: border-box;\n  }\n\n  & .ProseMirror {\n    & > * {\n      /* pre-emptively clear all direct descendant content, just in case any are adjacent floated content */\n      clear: both;\n    }\n    > p,\n    > ul,\n    > ol:not(", "):not(", "),\n    > h1,\n    > h2,\n    > h3,\n    > h4,\n    > h5,\n    > h6 {\n      /* deliberately allow wrapping of text based nodes, just in case any are adjacent floated content */\n      clear: none;\n    }\n\n    > p:last-child {\n      margin-bottom: 24px;\n    }\n  }\n\n  ", ";\n\n  .fabric-editor--full-width-mode {\n    /* Full Width Mode styles for ignoring breakout sizes */\n    .fabric-editor-breakout-mark,\n    .extension-container,\n    .pm-table-container {\n      width: 100% !important;\n    }\n\n    /* Prevent horizontal scroll on page in full width mode */\n    ", "\n  }\n"], ["\n  line-height: 24px;\n  padding-top: 50px;\n  padding-bottom: 55px;\n  height: calc(\n    100% - 105px\n  ); /* fill the viewport: 100% - (padding top & bottom) */\n  width: 100%;\n  margin: auto;\n  flex-direction: column;\n  flex-grow: 1;\n\n  max-width: ",
    "px;\n  transition: max-width ", ";\n\n  & .ProseMirror {\n    flex-grow: 1;\n    box-sizing: border-box;\n  }\n\n  & .ProseMirror {\n    & > * {\n      /* pre-emptively clear all direct descendant content, just in case any are adjacent floated content */\n      clear: both;\n    }\n    > p,\n    > ul,\n    > ol:not(", "):not(", "),\n    > h1,\n    > h2,\n    > h3,\n    > h4,\n    > h5,\n    > h6 {\n      /* deliberately allow wrapping of text based nodes, just in case any are adjacent floated content */\n      clear: none;\n    }\n\n    > p:last-child {\n      margin-bottom: 24px;\n    }\n  }\n\n  ", ";\n\n  .fabric-editor--full-width-mode {\n    /* Full Width Mode styles for ignoring breakout sizes */\n    .fabric-editor-breakout-mark,\n    .extension-container,\n    .pm-table-container {\n      width: 100% !important;\n    }\n\n    /* Prevent horizontal scroll on page in full width mode */\n    ",
    "\n  }\n"])), function (_a) {
    var theme = _a.theme, fullWidthMode = _a.fullWidthMode;
    return (fullWidthMode ? akEditorFullWidthLayoutWidth : theme.layoutMaxWidth) +
        TOTAL_PADDING;
}, SWOOP_ANIMATION, taskListSelector, decisionListSelector, tableFullPageEditorStyles, function (_a) {
    var containerWidth = _a.containerWidth;
    if (!containerWidth) {
        // initially hide until we have a containerWidth and can properly size them,
        // otherwise they can cause the editor width to extend which is non-recoverable
        return "\n          .pm-table-container,\n          .code-block,\n          .extension-container {\n            display: none;\n          }\n        ";
    }
    return "\n        .pm-table-container,\n        .code-block,\n        .extension-container {\n          max-width: " + (containerWidth -
        TOTAL_PADDING -
        tableMarginFullWidthMode * 2) + "px;\n        }\n\n        [data-layout-section] {\n          max-width: " + (containerWidth -
        TOTAL_PADDING +
        akLayoutGutterOffset * 2) + "px;\n        }\n      ";
});
EditorContentArea.displayName = 'EditorContentArea';
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
//# sourceMappingURL=StyledComponents.js.map