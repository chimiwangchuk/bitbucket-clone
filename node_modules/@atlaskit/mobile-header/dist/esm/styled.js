import { __makeTemplateObject } from "tslib";
import styled, { css, keyframes } from 'styled-components';
import { colors, gridSize as akGridSize, layers as akLayers, themed, typography, } from '@atlaskit/theme';
var gridSize = akGridSize();
// @atlaskit/navigation has a specific z-index, so we need to layer the header
// components relative to that.
var navLayer = akLayers.navigation();
var layers = {
    header: navLayer - 10,
    blanket: navLayer - 5,
    slider: navLayer + 5,
};
var mobileHeaderHeight = 54;
var xPositioning = function (_a) {
    var side = _a.side, isOpen = _a.isOpen;
    return side === 'right'
        ? css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n        right: 0;\n        transform: translateX(", ");\n      "], ["\n        right: 0;\n        transform: translateX(", ");\n      "])), isOpen ? '0' : '100vw') : css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n        left: 0;\n        transform: translateX(", ");\n      "], ["\n        left: 0;\n        transform: translateX(", ");\n      "])), isOpen ? '0' : '-100vw');
};
export var MobileNavSlider = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  height: ", ";\n  position: fixed;\n  top: ", "px;\n  transition: transform 0.2s ease-out;\n  z-index: ", ";\n  ", ";\n"], ["\n  height: ", ";\n  position: fixed;\n  top: ", "px;\n  transition: transform 0.2s ease-out;\n  z-index: ", ";\n  ", ";\n"])), function (props) { return "calc(100vh - " + props.topOffset + "px)"; }, function (props) { return props.topOffset; }, layers.slider, xPositioning);
// make space so content below doesn't slip beneath the header
// since the content is `position: fixed`
export var MobilePageHeader = styled.header(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  height: ", "px;\n"], ["\n  height: ", "px;\n"])), mobileHeaderHeight);
export var MobilePageHeaderContent = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  align-items: center;\n  background-color: ", ";\n  box-sizing: border-box;\n  display: flex;\n  height: ", "px;\n  padding: ", "px;\n  position: fixed;\n  top: ", "px;\n  width: 100%;\n  z-index: ", ";\n"], ["\n  align-items: center;\n  background-color: ", ";\n  box-sizing: border-box;\n  display: flex;\n  height: ", "px;\n  padding: ", "px;\n  position: fixed;\n  top: ", "px;\n  width: 100%;\n  z-index: ", ";\n"])), themed({ light: colors.N20, dark: colors.DN10 }), mobileHeaderHeight, gridSize, function (props) { return props.topOffset; }, layers.header);
var opacityIn = keyframes(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  from { opacity: 0; }\n  to { opacity: 1; }\n"], ["\n  from { opacity: 0; }\n  to { opacity: 1; }\n"])));
var opacityOut = keyframes(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  from { opacity: 1; }\n  to { opacity: 0; }\n"], ["\n  from { opacity: 1; }\n  to { opacity: 0; }\n"])));
// @atlaskit/blanket has a z-index *higher* than @atlaskit/navigation,
// so we can't display the AK blanket underneath the navigation.
export var FakeBlanket = styled.div(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  background: ", ";\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: ", ";\n  animation: ", " 0.2s ease-out;\n"], ["\n  background: ", ";\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: ", ";\n  animation: ", " 0.2s ease-out;\n"])), colors.N100A, layers.blanket, function (p) { return (p.isOpen ? opacityIn : opacityOut); });
// use proper h1 and header styles but for mobile we don't want a top margin
export var PageHeading = styled.h1(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  flex-grow: 1;\n  margin-left: ", "px;\n  ", ";\n  && {\n    margin-top: 0;\n  }\n"], ["\n  flex-grow: 1;\n  margin-left: ", "px;\n  ", ";\n  && {\n    margin-top: 0;\n  }\n"])), gridSize, typography.h500);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9;
//# sourceMappingURL=styled.js.map