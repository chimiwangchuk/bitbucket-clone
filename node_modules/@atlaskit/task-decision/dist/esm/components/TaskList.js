import { __extends } from "tslib";
import React from 'react';
import { PureComponent } from 'react';
import { TaskListWrapper } from '../styled/ListWrapper';
import { FabricElementsAnalyticsContext } from '@atlaskit/analytics-namespaced-context';
var TaskList = /** @class */ (function (_super) {
    __extends(TaskList, _super);
    function TaskList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TaskList.prototype.render = function () {
        var _a = this.props, listId = _a.listId, children = _a.children;
        var listSize = React.Children.count(children);
        if (!children) {
            return null;
        }
        // Data attributes are required for copy and paste from rendered content
        // to the editor to preserve the task.
        // This allows the editor to differentiate between numbered and ordered lists,
        // and action items, which all share the common `<li>` element.
        // The value of `data-task-local-id` should be discarded upon paste, with a
        // a new uuid generated by the editor for the cloned content.
        return (React.createElement(TaskListWrapper, { "data-task-list-local-id": "" }, React.Children.map(children, function (child, idx) {
            var localId = child.props.localId;
            return (React.createElement(FabricElementsAnalyticsContext, { data: {
                    listLocalId: listId,
                    listSize: listSize,
                    position: idx,
                } },
                React.createElement("div", { key: idx, "data-task-local-id": localId || '' }, child)));
        })));
    };
    return TaskList;
}(PureComponent));
export default TaskList;
//# sourceMappingURL=TaskList.js.map