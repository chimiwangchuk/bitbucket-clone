import _objectSpread from "@babel/runtime/helpers/objectSpread";
import _extends from "@babel/runtime/helpers/extends";
import _css from "@emotion/css";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import { jsx as ___EmotionJSX } from "@emotion/core";
import React, { Component, Fragment } from 'react';
import deepEqual from 'react-fast-compare';
import { N30, N40A } from '@atlaskit/theme/colors';
import { ContentNavigationWrapper } from '../ContentNavigation/primitives';
import ContentNavigation from '../ContentNavigation';
import { isTransitioning } from '../ResizeTransition';
import { Shadow } from '../../../common/primitives';
import { light, ThemeProvider } from '../../../theme';
import { CONTENT_NAV_WIDTH_COLLAPSED, GLOBAL_NAV_WIDTH } from '../../../common/constants';
export var ComposedContainerNavigation =
/*#__PURE__*/
function (_Component) {
  _inherits(ComposedContainerNavigation, _Component);

  function ComposedContainerNavigation() {
    _classCallCheck(this, ComposedContainerNavigation);

    return _possibleConstructorReturn(this, _getPrototypeOf(ComposedContainerNavigation).apply(this, arguments));
  }

  _createClass(ComposedContainerNavigation, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      var props = this.props;
      return !deepEqual(props, nextProps);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          containerNavigation = _this$props.containerNavigation,
          datasets = _this$props.datasets,
          EXPERIMENTAL_FLYOUT_ON_HOVER = _this$props.experimental_flyoutOnHover,
          EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE = _this$props.experimental_hideNavVisuallyOnCollapse,
          productNavigation = _this$props.productNavigation,
          transitionState = _this$props.transitionState,
          transitionStyle = _this$props.transitionStyle,
          isCollapsed = _this$props.isCollapsed,
          isResizing = _this$props.isResizing,
          getNavRef = _this$props.getNavRef,
          expand = _this$props.expand,
          view = _this$props.view;
      var isVisible = transitionState !== 'exited';
      var shouldDisableInteraction = isResizing || isTransitioning(transitionState);
      var dataset = datasets ? datasets.contextualNavigation : {};
      return ___EmotionJSX(ContentNavigationWrapper, _extends({
        key: "product-nav-wrapper",
        innerRef: getNavRef,
        disableInteraction: shouldDisableInteraction,
        style: transitionStyle
      }, dataset), ___EmotionJSX(ContentNavigation, {
        container: containerNavigation,
        isVisible: isVisible,
        key: "product-nav",
        product: productNavigation,
        experimental_hideNavVisuallyOnCollapse: EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE,
        view: view
      }), isCollapsed && !EXPERIMENTAL_FLYOUT_ON_HOVER ?
      /* eslint-disable jsx-a11y/click-events-have-key-events */
      ___EmotionJSX("div", {
        "aria-label": "Click to expand the navigation",
        role: "button",
        onClick: expand,
        css:
        /*#__PURE__*/
        _css({
          cursor: 'pointer',
          height: '100%',
          outline: 0,
          position: 'absolute',
          transition: 'background-color 100ms',
          width: CONTENT_NAV_WIDTH_COLLAPSED,
          ':hover': {
            backgroundColor: containerNavigation ? N30 : 'rgba(255, 255, 255, 0.08)'
          },
          ':active': {
            backgroundColor: N40A
          }
        }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0xheW91dE1hbmFnZXIvbmF2LWNvbXBvbmVudHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0VZIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0xheW91dE1hbmFnZXIvbmF2LWNvbXBvbmVudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBkZWVwRXF1YWwgZnJvbSAncmVhY3QtZmFzdC1jb21wYXJlJztcbmltcG9ydCB7IE4zMCwgTjQwQSB9IGZyb20gJ0BhdGxhc2tpdC90aGVtZS9jb2xvcnMnO1xuXG5pbXBvcnQgeyBDb250ZW50TmF2aWdhdGlvbldyYXBwZXIgfSBmcm9tICcuLi9Db250ZW50TmF2aWdhdGlvbi9wcmltaXRpdmVzJztcbmltcG9ydCBDb250ZW50TmF2aWdhdGlvbiBmcm9tICcuLi9Db250ZW50TmF2aWdhdGlvbic7XG5pbXBvcnQgeyBpc1RyYW5zaXRpb25pbmcgfSBmcm9tICcuLi9SZXNpemVUcmFuc2l0aW9uJztcbmltcG9ydCB7IFNoYWRvdyB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9wcmltaXRpdmVzJztcbmltcG9ydCB7IGxpZ2h0LCBUaGVtZVByb3ZpZGVyIH0gZnJvbSAnLi4vLi4vLi4vdGhlbWUnO1xuaW1wb3J0IHtcbiAgQ09OVEVOVF9OQVZfV0lEVEhfQ09MTEFQU0VELFxuICBHTE9CQUxfTkFWX1dJRFRILFxufSBmcm9tICcuLi8uLi8uLi9jb21tb24vY29uc3RhbnRzJztcblxuZXhwb3J0IGNsYXNzIENvbXBvc2VkQ29udGFpbmVyTmF2aWdhdGlvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMpIHtcbiAgICBjb25zdCB7IHByb3BzIH0gPSB0aGlzO1xuICAgIHJldHVybiAhZGVlcEVxdWFsKHByb3BzLCBuZXh0UHJvcHMpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGNvbnRhaW5lck5hdmlnYXRpb24sXG4gICAgICBkYXRhc2V0cyxcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjYW1lbGNhc2VcbiAgICAgIGV4cGVyaW1lbnRhbF9mbHlvdXRPbkhvdmVyOiBFWFBFUklNRU5UQUxfRkxZT1VUX09OX0hPVkVSLFxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgZXhwZXJpbWVudGFsX2hpZGVOYXZWaXN1YWxseU9uQ29sbGFwc2U6IEVYUEVSSU1FTlRBTF9ISURFX05BVl9WSVNVQUxMWV9PTl9DT0xMQVBTRSxcbiAgICAgIHByb2R1Y3ROYXZpZ2F0aW9uLFxuICAgICAgdHJhbnNpdGlvblN0YXRlLFxuICAgICAgdHJhbnNpdGlvblN0eWxlLFxuICAgICAgaXNDb2xsYXBzZWQsXG4gICAgICBpc1Jlc2l6aW5nLFxuICAgICAgZ2V0TmF2UmVmLFxuICAgICAgZXhwYW5kLFxuICAgICAgdmlldyxcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGlzVmlzaWJsZSA9IHRyYW5zaXRpb25TdGF0ZSAhPT0gJ2V4aXRlZCc7XG4gICAgY29uc3Qgc2hvdWxkRGlzYWJsZUludGVyYWN0aW9uID1cbiAgICAgIGlzUmVzaXppbmcgfHwgaXNUcmFuc2l0aW9uaW5nKHRyYW5zaXRpb25TdGF0ZSk7XG5cbiAgICBjb25zdCBkYXRhc2V0ID0gZGF0YXNldHMgPyBkYXRhc2V0cy5jb250ZXh0dWFsTmF2aWdhdGlvbiA6IHt9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxDb250ZW50TmF2aWdhdGlvbldyYXBwZXJcbiAgICAgICAga2V5PVwicHJvZHVjdC1uYXYtd3JhcHBlclwiXG4gICAgICAgIGlubmVyUmVmPXtnZXROYXZSZWZ9XG4gICAgICAgIGRpc2FibGVJbnRlcmFjdGlvbj17c2hvdWxkRGlzYWJsZUludGVyYWN0aW9ufVxuICAgICAgICBzdHlsZT17dHJhbnNpdGlvblN0eWxlfVxuICAgICAgICB7Li4uZGF0YXNldH1cbiAgICAgID5cbiAgICAgICAgPENvbnRlbnROYXZpZ2F0aW9uXG4gICAgICAgICAgY29udGFpbmVyPXtjb250YWluZXJOYXZpZ2F0aW9ufVxuICAgICAgICAgIGlzVmlzaWJsZT17aXNWaXNpYmxlfVxuICAgICAgICAgIGtleT1cInByb2R1Y3QtbmF2XCJcbiAgICAgICAgICBwcm9kdWN0PXtwcm9kdWN0TmF2aWdhdGlvbn1cbiAgICAgICAgICBleHBlcmltZW50YWxfaGlkZU5hdlZpc3VhbGx5T25Db2xsYXBzZT17XG4gICAgICAgICAgICBFWFBFUklNRU5UQUxfSElERV9OQVZfVklTVUFMTFlfT05fQ09MTEFQU0VcbiAgICAgICAgICB9XG4gICAgICAgICAgdmlldz17dmlld31cbiAgICAgICAgLz5cbiAgICAgICAge2lzQ29sbGFwc2VkICYmICFFWFBFUklNRU5UQUxfRkxZT1VUX09OX0hPVkVSID8gKFxuICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2NsaWNrLWV2ZW50cy1oYXZlLWtleS1ldmVudHMgKi9cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiQ2xpY2sgdG8gZXhwYW5kIHRoZSBuYXZpZ2F0aW9uXCJcbiAgICAgICAgICAgIHJvbGU9XCJidXR0b25cIlxuICAgICAgICAgICAgb25DbGljaz17ZXhwYW5kfVxuICAgICAgICAgICAgY3NzPXt7XG4gICAgICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgICAgICAgb3V0bGluZTogMCxcbiAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246ICdiYWNrZ3JvdW5kLWNvbG9yIDEwMG1zJyxcbiAgICAgICAgICAgICAgd2lkdGg6IENPTlRFTlRfTkFWX1dJRFRIX0NPTExBUFNFRCxcblxuICAgICAgICAgICAgICAnOmhvdmVyJzoge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogY29udGFpbmVyTmF2aWdhdGlvblxuICAgICAgICAgICAgICAgICAgPyBOMzBcbiAgICAgICAgICAgICAgICAgIDogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4wOCknLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAnOmFjdGl2ZSc6IHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IE40MEEsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIC8+XG4gICAgICAgICkgOiAvKiBlc2xpbnQtZW5hYmxlICovXG4gICAgICAgIG51bGx9XG4gICAgICA8L0NvbnRlbnROYXZpZ2F0aW9uV3JhcHBlcj5cbiAgICApO1xuICB9XG59XG5cbi8vIFNoYWxsb3cgY29tcGFyaXNpb24gb2YgcHJvcHMgaXMgc3VmZmljZWludCBpbiB0aGlzIGNhc2VcbmV4cG9ydCBjbGFzcyBDb21wb3NlZEdsb2JhbE5hdmlnYXRpb24gZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY29udGFpbmVyTmF2aWdhdGlvbixcbiAgICAgIGRhdGFzZXRzLFxuICAgICAgZ2xvYmFsTmF2aWdhdGlvbjogR2xvYmFsTmF2aWdhdGlvbixcbiAgICAgIHRvcE9mZnNldCxcbiAgICAgIHNob3VsZEhpZGVHbG9iYWxOYXZTaGFkb3csXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2FtZWxjYXNlXG4gICAgICBleHBlcmltZW50YWxfYWx0ZXJuYXRlRmx5b3V0QmVoYXZpb3VyOiBFWFBFUklNRU5UQUxfQUxURVJOQVRFX0ZMWU9VVF9CRUhBVklPVVIsXG4gICAgICBjbG9zZUZseW91dCxcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGRhdGFzZXQgPSBkYXRhc2V0cyA/IGRhdGFzZXRzLmdsb2JhbE5hdmlnYXRpb24gOiB7fTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIHsuLi5kYXRhc2V0fVxuICAgICAgICBvbk1vdXNlT3Zlcj17XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgICAgICAgRVhQRVJJTUVOVEFMX0FMVEVSTkFURV9GTFlPVVRfQkVIQVZJT1VSID8gY2xvc2VGbHlvdXQgOiBudWxsXG4gICAgICAgIH1cbiAgICAgID5cbiAgICAgICAgPFRoZW1lUHJvdmlkZXJcbiAgICAgICAgICB0aGVtZT17dGhlbWUgPT4gKHtcbiAgICAgICAgICAgIHRvcE9mZnNldCxcbiAgICAgICAgICAgIG1vZGU6IGxpZ2h0LCAvLyBJZiBubyB0aGVtZSBhbHJlYWR5IGV4aXN0cyBkZWZhdWx0IHRvIGxpZ2h0IG1vZGVcbiAgICAgICAgICAgIC4uLnRoZW1lLFxuICAgICAgICAgIH0pfVxuICAgICAgICA+XG4gICAgICAgICAgPEZyYWdtZW50PlxuICAgICAgICAgICAgeyFzaG91bGRIaWRlR2xvYmFsTmF2U2hhZG93ICYmIChcbiAgICAgICAgICAgICAgPFNoYWRvd1xuICAgICAgICAgICAgICAgIGlzQm9sZD17ISFjb250YWluZXJOYXZpZ2F0aW9ufVxuICAgICAgICAgICAgICAgIGlzT3ZlckRhcmtCZ1xuICAgICAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpbkxlZnQ6IEdMT0JBTF9OQVZfV0lEVEggfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICB7LyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L2pzeC1uby11bmRlZiAqL31cbiAgICAgICAgICAgIDxHbG9iYWxOYXZpZ2F0aW9uIC8+XG4gICAgICAgICAgPC9GcmFnbWVudD5cbiAgICAgICAgPC9UaGVtZVByb3ZpZGVyPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIl19 */"),
        tabIndex: -1
      }) :
      /* eslint-enable */
      null);
    }
  }]);

  return ComposedContainerNavigation;
}(Component); // Shallow comparision of props is sufficeint in this case

export var ComposedGlobalNavigation =
/*#__PURE__*/
function (_Component2) {
  _inherits(ComposedGlobalNavigation, _Component2);

  function ComposedGlobalNavigation() {
    _classCallCheck(this, ComposedGlobalNavigation);

    return _possibleConstructorReturn(this, _getPrototypeOf(ComposedGlobalNavigation).apply(this, arguments));
  }

  _createClass(ComposedGlobalNavigation, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          containerNavigation = _this$props2.containerNavigation,
          datasets = _this$props2.datasets,
          GlobalNavigation = _this$props2.globalNavigation,
          topOffset = _this$props2.topOffset,
          shouldHideGlobalNavShadow = _this$props2.shouldHideGlobalNavShadow,
          EXPERIMENTAL_ALTERNATE_FLYOUT_BEHAVIOUR = _this$props2.experimental_alternateFlyoutBehaviour,
          closeFlyout = _this$props2.closeFlyout;
      var dataset = datasets ? datasets.globalNavigation : {};
      return ___EmotionJSX("div", _extends({}, dataset, {
        onMouseOver: // eslint-disable-next-line no-undef
        EXPERIMENTAL_ALTERNATE_FLYOUT_BEHAVIOUR ? closeFlyout : null
      }), ___EmotionJSX(ThemeProvider, {
        theme: function theme(_theme) {
          return _objectSpread({
            topOffset: topOffset,
            mode: light
          }, _theme);
        }
      }, ___EmotionJSX(Fragment, null, !shouldHideGlobalNavShadow && ___EmotionJSX(Shadow, {
        isBold: !!containerNavigation,
        isOverDarkBg: true,
        style: {
          marginLeft: GLOBAL_NAV_WIDTH
        }
      }), ___EmotionJSX(GlobalNavigation, null))));
    }
  }]);

  return ComposedGlobalNavigation;
}(Component);