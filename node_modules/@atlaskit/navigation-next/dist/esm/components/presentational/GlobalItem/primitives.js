import _extends from "@babel/runtime/helpers/extends";
import _css from "@emotion/css";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { jsx as ___EmotionJSX } from "@emotion/core";
import React, { Fragment, Component } from 'react';
import Tooltip from '@atlaskit/tooltip';
import deepEqual from 'react-fast-compare';
import { styleReducerNoOp, withGlobalTheme } from '../../../theme';

var _ref = process.env.NODE_ENV === "production" ? {
  name: "1ixbp0l",
  styles: "pointer-events:none;"
} : {
  name: "1ixbp0l",
  styles: "pointer-events:none;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0dsb2JhbEl0ZW0vcHJpbWl0aXZlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErQmUiLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcHJlc2VudGF0aW9uYWwvR2xvYmFsSXRlbS9wcmltaXRpdmVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVG9vbHRpcCBmcm9tICdAYXRsYXNraXQvdG9vbHRpcCc7XG5cbmltcG9ydCBkZWVwRXF1YWwgZnJvbSAncmVhY3QtZmFzdC1jb21wYXJlJztcbmltcG9ydCB7IHN0eWxlUmVkdWNlck5vT3AsIHdpdGhHbG9iYWxUaGVtZSB9IGZyb20gJy4uLy4uLy4uL3RoZW1lJztcblxuY2xhc3MgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGRhdGFzZXQ6IHtcbiAgICAgICdkYXRhLXRlc3RpZCc6ICdHbG9iYWxOYXZpZ2F0aW9uSXRlbScsXG4gICAgfSxcbiAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgaXNIb3ZlcjogZmFsc2UsXG4gICAgaXNTZWxlY3RlZDogZmFsc2UsXG4gICAgaXNGb2N1c2VkOiBmYWxzZSxcbiAgICBzaXplOiAnbGFyZ2UnLFxuICAgIHN0eWxlczogc3R5bGVSZWR1Y2VyTm9PcCxcbiAgfTtcblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XG4gICAgcmV0dXJuICFkZWVwRXF1YWwodGhpcy5wcm9wcywgbmV4dFByb3BzKTtcbiAgfVxuXG4gIHJlbmRlckljb25BbmRCYWRnZSA9IGJhZGdlV3JhcHBlciA9PiB7XG4gICAgY29uc3QgeyBpY29uOiBJY29uLCBiYWRnZTogQmFkZ2UsIGxhYmVsLCB0b29sdGlwIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0gdGhpcy5nZXRQcmVzZW50YXRpb25Qcm9wcygpO1xuICAgIGlmICghSWNvbiAmJiAhQmFkZ2UpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGljb25MYWJlbCA9IGxhYmVsIHx8ICh0eXBlb2YgdG9vbHRpcCA9PT0gJ3N0cmluZycgPyB0b29sdGlwIDogJycpO1xuICAgIHJldHVybiAoXG4gICAgICA8RnJhZ21lbnQ+XG4gICAgICAgIHshIUljb24gJiYgKFxuICAgICAgICAgIDxkaXYgY3NzPXt7IHBvaW50ZXJFdmVudHM6ICdub25lJyB9fT5cbiAgICAgICAgICAgIDxJY29uIGxhYmVsPXtpY29uTGFiZWx9IHNlY29uZGFyeUNvbG9yPVwiaW5oZXJpdFwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICAgIHshIUJhZGdlICYmIChcbiAgICAgICAgICA8ZGl2IGNzcz17YmFkZ2VXcmFwcGVyfT5cbiAgICAgICAgICAgIDxCYWRnZSB7Li4ucHJlc2VudGF0aW9uUHJvcHN9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L0ZyYWdtZW50PlxuICAgICk7XG4gIH07XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIGdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNGb2N1c2VkLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIHRoZW1lLFxuICAgICAgLi4uZXh0ZXJuYWxQcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGV4dGVybmFsUHJvcHM7XG4gIH07XG5cbiAgZ2V0UHJlc2VudGF0aW9uUHJvcHMgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBpc0FjdGl2ZSwgaXNGb2N1c2VkLCBpc0hvdmVyLCBpc1NlbGVjdGVkLCBzaXplIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIHsgaXNBY3RpdmUsIGlzRm9jdXNlZCwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICB9O1xuXG4gIGdlbmVyYXRlU3R5bGVzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBzaXplLFxuICAgICAgc3R5bGVzOiBzdHlsZVJlZHVjZXIsXG4gICAgICB0aGVtZSxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IG1vZGUgfSA9IHRoZW1lO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0geyBpc0FjdGl2ZSwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICAgIGNvbnN0IGRlZmF1bHRTdHlsZXMgPSBtb2RlLmdsb2JhbEl0ZW0ocHJlc2VudGF0aW9uUHJvcHMpO1xuICAgIHJldHVybiBzdHlsZVJlZHVjZXIoZGVmYXVsdFN0eWxlcywgcHJlc2VudGF0aW9uUHJvcHMpO1xuICB9O1xuXG4gIHJlbmRlckNoaWxkcmVuID0gc3R5bGVzID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBjb21wb25lbnQ6IEN1c3RvbUNvbXBvbmVudCxcbiAgICAgIGRhdGFzZXQsXG4gICAgICBocmVmLFxuICAgICAgaWQsXG4gICAgICBvbkNsaWNrLFxuICAgICAgdGFyZ2V0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGdsb2JhbElEID0gaWQgJiYgYCR7aWR9R2xvYmFsSXRlbWA7XG5cbiAgICBsZXQgaXRlbUJhc2U7XG5cbiAgICBpZiAoQ3VzdG9tQ29tcG9uZW50KSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgLy8gQ3VzdG9tQ29tcG9uZW50IG5lZWRzIGEgY2xhc3NOYW1lIHByb3AuIFRoaXMgcHJvcCBpc1xuICAgICAgICAvLyBhZGRlZCBhZnRlciB0aGUgZW1vdGlvbiB0cmFuc2xhdGlvbi5cbiAgICAgICAgPEN1c3RvbUNvbXBvbmVudFxuICAgICAgICAgIHsuLi50aGlzLmdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzKCl9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L0N1c3RvbUNvbXBvbmVudD5cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChocmVmKSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgPGFcbiAgICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICAgIGlkPXtnbG9iYWxJRH1cbiAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgIHRhcmdldD17dGFyZ2V0fVxuICAgICAgICAgIGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX1cbiAgICAgICAgICB7Li4uZGF0YXNldH1cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9hPlxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKG9uQ2xpY2spIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgaWQ9e2dsb2JhbElEfVxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICAgIHsuLi5kYXRhc2V0fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8c3BhbiBpZD17Z2xvYmFsSUR9IGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX0gey4uLmRhdGFzZXR9PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaXRlbUJhc2U7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaXNTZWxlY3RlZCwgdG9vbHRpcCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzdHlsZXMgPSB0aGlzLmdlbmVyYXRlU3R5bGVzKCk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxUb29sdGlwXG4gICAgICAgIGRlbGF5PXswfVxuICAgICAgICBjb250ZW50PXtpc1NlbGVjdGVkID8gdW5kZWZpbmVkIDogdG9vbHRpcH1cbiAgICAgICAgcG9zaXRpb249XCJyaWdodFwiXG4gICAgICAgIGhpZGVUb29sdGlwT25DbGlja1xuICAgICAgICBoaWRlVG9vbHRpcE9uTW91c2VEb3duXG4gICAgICA+XG4gICAgICAgIDxkaXYgY3NzPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snIH19PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckNoaWxkcmVuKHN0eWxlcyl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Ub29sdGlwPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgYXMgQmFzZUdsb2JhbE5hdmlnYXRpb25JdGVtUHJpbWl0aXZlIH07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhHbG9iYWxUaGVtZShHbG9iYWxOYXZpZ2F0aW9uSXRlbVByaW1pdGl2ZSk7XG4iXX0= */"
};

var _ref2 = process.env.NODE_ENV === "production" ? {
  name: "1baulvz",
  styles: "display:inline-block;"
} : {
  name: "1baulvz",
  styles: "display:inline-block;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0dsb2JhbEl0ZW0vcHJpbWl0aXZlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvSmEiLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcHJlc2VudGF0aW9uYWwvR2xvYmFsSXRlbS9wcmltaXRpdmVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVG9vbHRpcCBmcm9tICdAYXRsYXNraXQvdG9vbHRpcCc7XG5cbmltcG9ydCBkZWVwRXF1YWwgZnJvbSAncmVhY3QtZmFzdC1jb21wYXJlJztcbmltcG9ydCB7IHN0eWxlUmVkdWNlck5vT3AsIHdpdGhHbG9iYWxUaGVtZSB9IGZyb20gJy4uLy4uLy4uL3RoZW1lJztcblxuY2xhc3MgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGRhdGFzZXQ6IHtcbiAgICAgICdkYXRhLXRlc3RpZCc6ICdHbG9iYWxOYXZpZ2F0aW9uSXRlbScsXG4gICAgfSxcbiAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgaXNIb3ZlcjogZmFsc2UsXG4gICAgaXNTZWxlY3RlZDogZmFsc2UsXG4gICAgaXNGb2N1c2VkOiBmYWxzZSxcbiAgICBzaXplOiAnbGFyZ2UnLFxuICAgIHN0eWxlczogc3R5bGVSZWR1Y2VyTm9PcCxcbiAgfTtcblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XG4gICAgcmV0dXJuICFkZWVwRXF1YWwodGhpcy5wcm9wcywgbmV4dFByb3BzKTtcbiAgfVxuXG4gIHJlbmRlckljb25BbmRCYWRnZSA9IGJhZGdlV3JhcHBlciA9PiB7XG4gICAgY29uc3QgeyBpY29uOiBJY29uLCBiYWRnZTogQmFkZ2UsIGxhYmVsLCB0b29sdGlwIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0gdGhpcy5nZXRQcmVzZW50YXRpb25Qcm9wcygpO1xuICAgIGlmICghSWNvbiAmJiAhQmFkZ2UpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGljb25MYWJlbCA9IGxhYmVsIHx8ICh0eXBlb2YgdG9vbHRpcCA9PT0gJ3N0cmluZycgPyB0b29sdGlwIDogJycpO1xuICAgIHJldHVybiAoXG4gICAgICA8RnJhZ21lbnQ+XG4gICAgICAgIHshIUljb24gJiYgKFxuICAgICAgICAgIDxkaXYgY3NzPXt7IHBvaW50ZXJFdmVudHM6ICdub25lJyB9fT5cbiAgICAgICAgICAgIDxJY29uIGxhYmVsPXtpY29uTGFiZWx9IHNlY29uZGFyeUNvbG9yPVwiaW5oZXJpdFwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICAgIHshIUJhZGdlICYmIChcbiAgICAgICAgICA8ZGl2IGNzcz17YmFkZ2VXcmFwcGVyfT5cbiAgICAgICAgICAgIDxCYWRnZSB7Li4ucHJlc2VudGF0aW9uUHJvcHN9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L0ZyYWdtZW50PlxuICAgICk7XG4gIH07XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIGdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNGb2N1c2VkLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIHRoZW1lLFxuICAgICAgLi4uZXh0ZXJuYWxQcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGV4dGVybmFsUHJvcHM7XG4gIH07XG5cbiAgZ2V0UHJlc2VudGF0aW9uUHJvcHMgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBpc0FjdGl2ZSwgaXNGb2N1c2VkLCBpc0hvdmVyLCBpc1NlbGVjdGVkLCBzaXplIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIHsgaXNBY3RpdmUsIGlzRm9jdXNlZCwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICB9O1xuXG4gIGdlbmVyYXRlU3R5bGVzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBzaXplLFxuICAgICAgc3R5bGVzOiBzdHlsZVJlZHVjZXIsXG4gICAgICB0aGVtZSxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IG1vZGUgfSA9IHRoZW1lO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0geyBpc0FjdGl2ZSwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICAgIGNvbnN0IGRlZmF1bHRTdHlsZXMgPSBtb2RlLmdsb2JhbEl0ZW0ocHJlc2VudGF0aW9uUHJvcHMpO1xuICAgIHJldHVybiBzdHlsZVJlZHVjZXIoZGVmYXVsdFN0eWxlcywgcHJlc2VudGF0aW9uUHJvcHMpO1xuICB9O1xuXG4gIHJlbmRlckNoaWxkcmVuID0gc3R5bGVzID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBjb21wb25lbnQ6IEN1c3RvbUNvbXBvbmVudCxcbiAgICAgIGRhdGFzZXQsXG4gICAgICBocmVmLFxuICAgICAgaWQsXG4gICAgICBvbkNsaWNrLFxuICAgICAgdGFyZ2V0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGdsb2JhbElEID0gaWQgJiYgYCR7aWR9R2xvYmFsSXRlbWA7XG5cbiAgICBsZXQgaXRlbUJhc2U7XG5cbiAgICBpZiAoQ3VzdG9tQ29tcG9uZW50KSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgLy8gQ3VzdG9tQ29tcG9uZW50IG5lZWRzIGEgY2xhc3NOYW1lIHByb3AuIFRoaXMgcHJvcCBpc1xuICAgICAgICAvLyBhZGRlZCBhZnRlciB0aGUgZW1vdGlvbiB0cmFuc2xhdGlvbi5cbiAgICAgICAgPEN1c3RvbUNvbXBvbmVudFxuICAgICAgICAgIHsuLi50aGlzLmdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzKCl9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L0N1c3RvbUNvbXBvbmVudD5cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChocmVmKSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgPGFcbiAgICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICAgIGlkPXtnbG9iYWxJRH1cbiAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgIHRhcmdldD17dGFyZ2V0fVxuICAgICAgICAgIGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX1cbiAgICAgICAgICB7Li4uZGF0YXNldH1cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9hPlxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKG9uQ2xpY2spIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgaWQ9e2dsb2JhbElEfVxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICAgIHsuLi5kYXRhc2V0fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8c3BhbiBpZD17Z2xvYmFsSUR9IGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX0gey4uLmRhdGFzZXR9PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaXRlbUJhc2U7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaXNTZWxlY3RlZCwgdG9vbHRpcCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzdHlsZXMgPSB0aGlzLmdlbmVyYXRlU3R5bGVzKCk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxUb29sdGlwXG4gICAgICAgIGRlbGF5PXswfVxuICAgICAgICBjb250ZW50PXtpc1NlbGVjdGVkID8gdW5kZWZpbmVkIDogdG9vbHRpcH1cbiAgICAgICAgcG9zaXRpb249XCJyaWdodFwiXG4gICAgICAgIGhpZGVUb29sdGlwT25DbGlja1xuICAgICAgICBoaWRlVG9vbHRpcE9uTW91c2VEb3duXG4gICAgICA+XG4gICAgICAgIDxkaXYgY3NzPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snIH19PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckNoaWxkcmVuKHN0eWxlcyl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Ub29sdGlwPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgYXMgQmFzZUdsb2JhbE5hdmlnYXRpb25JdGVtUHJpbWl0aXZlIH07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhHbG9iYWxUaGVtZShHbG9iYWxOYXZpZ2F0aW9uSXRlbVByaW1pdGl2ZSk7XG4iXX0= */"
};

var GlobalNavigationItemPrimitive =
/*#__PURE__*/
function (_Component) {
  _inherits(GlobalNavigationItemPrimitive, _Component);

  function GlobalNavigationItemPrimitive() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, GlobalNavigationItemPrimitive);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GlobalNavigationItemPrimitive)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "renderIconAndBadge", function (badgeWrapper) {
      var _this$props = _this.props,
          Icon = _this$props.icon,
          Badge = _this$props.badge,
          label = _this$props.label,
          tooltip = _this$props.tooltip;

      var presentationProps = _this.getPresentationProps();

      if (!Icon && !Badge) return null;
      var iconLabel = label || (typeof tooltip === 'string' ? tooltip : '');
      return ___EmotionJSX(Fragment, null, !!Icon && ___EmotionJSX("div", {
        css: _ref
      }, ___EmotionJSX(Icon, {
        label: iconLabel,
        secondaryColor: "inherit"
      })), !!Badge && ___EmotionJSX("div", {
        css: badgeWrapper
      }, ___EmotionJSX(Badge, presentationProps)));
    });

    _defineProperty(_assertThisInitialized(_this), "getGlobalItemExternalProps", function () {
      var _this$props2 = _this.props,
          isActive = _this$props2.isActive,
          isFocused = _this$props2.isFocused,
          isHover = _this$props2.isHover,
          theme = _this$props2.theme,
          externalProps = _objectWithoutProperties(_this$props2, ["isActive", "isFocused", "isHover", "theme"]);

      return externalProps;
    });

    _defineProperty(_assertThisInitialized(_this), "getPresentationProps", function () {
      var _this$props3 = _this.props,
          isActive = _this$props3.isActive,
          isFocused = _this$props3.isFocused,
          isHover = _this$props3.isHover,
          isSelected = _this$props3.isSelected,
          size = _this$props3.size;
      return {
        isActive: isActive,
        isFocused: isFocused,
        isHover: isHover,
        isSelected: isSelected,
        size: size
      };
    });

    _defineProperty(_assertThisInitialized(_this), "generateStyles", function () {
      var _this$props4 = _this.props,
          isActive = _this$props4.isActive,
          isHover = _this$props4.isHover,
          isSelected = _this$props4.isSelected,
          size = _this$props4.size,
          styleReducer = _this$props4.styles,
          theme = _this$props4.theme;
      var mode = theme.mode;
      var presentationProps = {
        isActive: isActive,
        isHover: isHover,
        isSelected: isSelected,
        size: size
      };
      var defaultStyles = mode.globalItem(presentationProps);
      return styleReducer(defaultStyles, presentationProps);
    });

    _defineProperty(_assertThisInitialized(_this), "renderChildren", function (styles) {
      var _this$props5 = _this.props,
          CustomComponent = _this$props5.component,
          dataset = _this$props5.dataset,
          href = _this$props5.href,
          id = _this$props5.id,
          onClick = _this$props5.onClick,
          target = _this$props5.target;
      var globalID = id && "".concat(id, "GlobalItem");
      var itemBase;

      if (CustomComponent) {
        itemBase = // CustomComponent needs a className prop. This prop is
        // added after the emotion translation.
        ___EmotionJSX(CustomComponent, _extends({}, _this.getGlobalItemExternalProps(), {
          css:
          /*#__PURE__*/
          _css({
            '&&': styles.itemBase
          }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0dsb2JhbEl0ZW0vcHJpbWl0aXZlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpR1UiLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcHJlc2VudGF0aW9uYWwvR2xvYmFsSXRlbS9wcmltaXRpdmVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVG9vbHRpcCBmcm9tICdAYXRsYXNraXQvdG9vbHRpcCc7XG5cbmltcG9ydCBkZWVwRXF1YWwgZnJvbSAncmVhY3QtZmFzdC1jb21wYXJlJztcbmltcG9ydCB7IHN0eWxlUmVkdWNlck5vT3AsIHdpdGhHbG9iYWxUaGVtZSB9IGZyb20gJy4uLy4uLy4uL3RoZW1lJztcblxuY2xhc3MgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGRhdGFzZXQ6IHtcbiAgICAgICdkYXRhLXRlc3RpZCc6ICdHbG9iYWxOYXZpZ2F0aW9uSXRlbScsXG4gICAgfSxcbiAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgaXNIb3ZlcjogZmFsc2UsXG4gICAgaXNTZWxlY3RlZDogZmFsc2UsXG4gICAgaXNGb2N1c2VkOiBmYWxzZSxcbiAgICBzaXplOiAnbGFyZ2UnLFxuICAgIHN0eWxlczogc3R5bGVSZWR1Y2VyTm9PcCxcbiAgfTtcblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XG4gICAgcmV0dXJuICFkZWVwRXF1YWwodGhpcy5wcm9wcywgbmV4dFByb3BzKTtcbiAgfVxuXG4gIHJlbmRlckljb25BbmRCYWRnZSA9IGJhZGdlV3JhcHBlciA9PiB7XG4gICAgY29uc3QgeyBpY29uOiBJY29uLCBiYWRnZTogQmFkZ2UsIGxhYmVsLCB0b29sdGlwIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0gdGhpcy5nZXRQcmVzZW50YXRpb25Qcm9wcygpO1xuICAgIGlmICghSWNvbiAmJiAhQmFkZ2UpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGljb25MYWJlbCA9IGxhYmVsIHx8ICh0eXBlb2YgdG9vbHRpcCA9PT0gJ3N0cmluZycgPyB0b29sdGlwIDogJycpO1xuICAgIHJldHVybiAoXG4gICAgICA8RnJhZ21lbnQ+XG4gICAgICAgIHshIUljb24gJiYgKFxuICAgICAgICAgIDxkaXYgY3NzPXt7IHBvaW50ZXJFdmVudHM6ICdub25lJyB9fT5cbiAgICAgICAgICAgIDxJY29uIGxhYmVsPXtpY29uTGFiZWx9IHNlY29uZGFyeUNvbG9yPVwiaW5oZXJpdFwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICAgIHshIUJhZGdlICYmIChcbiAgICAgICAgICA8ZGl2IGNzcz17YmFkZ2VXcmFwcGVyfT5cbiAgICAgICAgICAgIDxCYWRnZSB7Li4ucHJlc2VudGF0aW9uUHJvcHN9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L0ZyYWdtZW50PlxuICAgICk7XG4gIH07XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIGdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNGb2N1c2VkLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIHRoZW1lLFxuICAgICAgLi4uZXh0ZXJuYWxQcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGV4dGVybmFsUHJvcHM7XG4gIH07XG5cbiAgZ2V0UHJlc2VudGF0aW9uUHJvcHMgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBpc0FjdGl2ZSwgaXNGb2N1c2VkLCBpc0hvdmVyLCBpc1NlbGVjdGVkLCBzaXplIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIHsgaXNBY3RpdmUsIGlzRm9jdXNlZCwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICB9O1xuXG4gIGdlbmVyYXRlU3R5bGVzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBzaXplLFxuICAgICAgc3R5bGVzOiBzdHlsZVJlZHVjZXIsXG4gICAgICB0aGVtZSxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IG1vZGUgfSA9IHRoZW1lO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0geyBpc0FjdGl2ZSwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICAgIGNvbnN0IGRlZmF1bHRTdHlsZXMgPSBtb2RlLmdsb2JhbEl0ZW0ocHJlc2VudGF0aW9uUHJvcHMpO1xuICAgIHJldHVybiBzdHlsZVJlZHVjZXIoZGVmYXVsdFN0eWxlcywgcHJlc2VudGF0aW9uUHJvcHMpO1xuICB9O1xuXG4gIHJlbmRlckNoaWxkcmVuID0gc3R5bGVzID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBjb21wb25lbnQ6IEN1c3RvbUNvbXBvbmVudCxcbiAgICAgIGRhdGFzZXQsXG4gICAgICBocmVmLFxuICAgICAgaWQsXG4gICAgICBvbkNsaWNrLFxuICAgICAgdGFyZ2V0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGdsb2JhbElEID0gaWQgJiYgYCR7aWR9R2xvYmFsSXRlbWA7XG5cbiAgICBsZXQgaXRlbUJhc2U7XG5cbiAgICBpZiAoQ3VzdG9tQ29tcG9uZW50KSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgLy8gQ3VzdG9tQ29tcG9uZW50IG5lZWRzIGEgY2xhc3NOYW1lIHByb3AuIFRoaXMgcHJvcCBpc1xuICAgICAgICAvLyBhZGRlZCBhZnRlciB0aGUgZW1vdGlvbiB0cmFuc2xhdGlvbi5cbiAgICAgICAgPEN1c3RvbUNvbXBvbmVudFxuICAgICAgICAgIHsuLi50aGlzLmdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzKCl9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L0N1c3RvbUNvbXBvbmVudD5cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChocmVmKSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgPGFcbiAgICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICAgIGlkPXtnbG9iYWxJRH1cbiAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgIHRhcmdldD17dGFyZ2V0fVxuICAgICAgICAgIGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX1cbiAgICAgICAgICB7Li4uZGF0YXNldH1cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9hPlxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKG9uQ2xpY2spIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgaWQ9e2dsb2JhbElEfVxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICAgIHsuLi5kYXRhc2V0fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8c3BhbiBpZD17Z2xvYmFsSUR9IGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX0gey4uLmRhdGFzZXR9PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaXRlbUJhc2U7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaXNTZWxlY3RlZCwgdG9vbHRpcCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzdHlsZXMgPSB0aGlzLmdlbmVyYXRlU3R5bGVzKCk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxUb29sdGlwXG4gICAgICAgIGRlbGF5PXswfVxuICAgICAgICBjb250ZW50PXtpc1NlbGVjdGVkID8gdW5kZWZpbmVkIDogdG9vbHRpcH1cbiAgICAgICAgcG9zaXRpb249XCJyaWdodFwiXG4gICAgICAgIGhpZGVUb29sdGlwT25DbGlja1xuICAgICAgICBoaWRlVG9vbHRpcE9uTW91c2VEb3duXG4gICAgICA+XG4gICAgICAgIDxkaXYgY3NzPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snIH19PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckNoaWxkcmVuKHN0eWxlcyl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Ub29sdGlwPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgYXMgQmFzZUdsb2JhbE5hdmlnYXRpb25JdGVtUHJpbWl0aXZlIH07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhHbG9iYWxUaGVtZShHbG9iYWxOYXZpZ2F0aW9uSXRlbVByaW1pdGl2ZSk7XG4iXX0= */")
        }), _this.renderIconAndBadge(styles.badgeWrapper));
      } else if (href) {
        itemBase = ___EmotionJSX("a", _extends({
          href: href,
          id: globalID,
          onClick: onClick,
          target: target,
          css:
          /*#__PURE__*/
          _css({
            '&&': styles.itemBase
          }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0dsb2JhbEl0ZW0vcHJpbWl0aXZlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2R1UiLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcHJlc2VudGF0aW9uYWwvR2xvYmFsSXRlbS9wcmltaXRpdmVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVG9vbHRpcCBmcm9tICdAYXRsYXNraXQvdG9vbHRpcCc7XG5cbmltcG9ydCBkZWVwRXF1YWwgZnJvbSAncmVhY3QtZmFzdC1jb21wYXJlJztcbmltcG9ydCB7IHN0eWxlUmVkdWNlck5vT3AsIHdpdGhHbG9iYWxUaGVtZSB9IGZyb20gJy4uLy4uLy4uL3RoZW1lJztcblxuY2xhc3MgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGRhdGFzZXQ6IHtcbiAgICAgICdkYXRhLXRlc3RpZCc6ICdHbG9iYWxOYXZpZ2F0aW9uSXRlbScsXG4gICAgfSxcbiAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgaXNIb3ZlcjogZmFsc2UsXG4gICAgaXNTZWxlY3RlZDogZmFsc2UsXG4gICAgaXNGb2N1c2VkOiBmYWxzZSxcbiAgICBzaXplOiAnbGFyZ2UnLFxuICAgIHN0eWxlczogc3R5bGVSZWR1Y2VyTm9PcCxcbiAgfTtcblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XG4gICAgcmV0dXJuICFkZWVwRXF1YWwodGhpcy5wcm9wcywgbmV4dFByb3BzKTtcbiAgfVxuXG4gIHJlbmRlckljb25BbmRCYWRnZSA9IGJhZGdlV3JhcHBlciA9PiB7XG4gICAgY29uc3QgeyBpY29uOiBJY29uLCBiYWRnZTogQmFkZ2UsIGxhYmVsLCB0b29sdGlwIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0gdGhpcy5nZXRQcmVzZW50YXRpb25Qcm9wcygpO1xuICAgIGlmICghSWNvbiAmJiAhQmFkZ2UpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGljb25MYWJlbCA9IGxhYmVsIHx8ICh0eXBlb2YgdG9vbHRpcCA9PT0gJ3N0cmluZycgPyB0b29sdGlwIDogJycpO1xuICAgIHJldHVybiAoXG4gICAgICA8RnJhZ21lbnQ+XG4gICAgICAgIHshIUljb24gJiYgKFxuICAgICAgICAgIDxkaXYgY3NzPXt7IHBvaW50ZXJFdmVudHM6ICdub25lJyB9fT5cbiAgICAgICAgICAgIDxJY29uIGxhYmVsPXtpY29uTGFiZWx9IHNlY29uZGFyeUNvbG9yPVwiaW5oZXJpdFwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICAgIHshIUJhZGdlICYmIChcbiAgICAgICAgICA8ZGl2IGNzcz17YmFkZ2VXcmFwcGVyfT5cbiAgICAgICAgICAgIDxCYWRnZSB7Li4ucHJlc2VudGF0aW9uUHJvcHN9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L0ZyYWdtZW50PlxuICAgICk7XG4gIH07XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIGdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNGb2N1c2VkLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIHRoZW1lLFxuICAgICAgLi4uZXh0ZXJuYWxQcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGV4dGVybmFsUHJvcHM7XG4gIH07XG5cbiAgZ2V0UHJlc2VudGF0aW9uUHJvcHMgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBpc0FjdGl2ZSwgaXNGb2N1c2VkLCBpc0hvdmVyLCBpc1NlbGVjdGVkLCBzaXplIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIHsgaXNBY3RpdmUsIGlzRm9jdXNlZCwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICB9O1xuXG4gIGdlbmVyYXRlU3R5bGVzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBzaXplLFxuICAgICAgc3R5bGVzOiBzdHlsZVJlZHVjZXIsXG4gICAgICB0aGVtZSxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IG1vZGUgfSA9IHRoZW1lO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0geyBpc0FjdGl2ZSwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICAgIGNvbnN0IGRlZmF1bHRTdHlsZXMgPSBtb2RlLmdsb2JhbEl0ZW0ocHJlc2VudGF0aW9uUHJvcHMpO1xuICAgIHJldHVybiBzdHlsZVJlZHVjZXIoZGVmYXVsdFN0eWxlcywgcHJlc2VudGF0aW9uUHJvcHMpO1xuICB9O1xuXG4gIHJlbmRlckNoaWxkcmVuID0gc3R5bGVzID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBjb21wb25lbnQ6IEN1c3RvbUNvbXBvbmVudCxcbiAgICAgIGRhdGFzZXQsXG4gICAgICBocmVmLFxuICAgICAgaWQsXG4gICAgICBvbkNsaWNrLFxuICAgICAgdGFyZ2V0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGdsb2JhbElEID0gaWQgJiYgYCR7aWR9R2xvYmFsSXRlbWA7XG5cbiAgICBsZXQgaXRlbUJhc2U7XG5cbiAgICBpZiAoQ3VzdG9tQ29tcG9uZW50KSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgLy8gQ3VzdG9tQ29tcG9uZW50IG5lZWRzIGEgY2xhc3NOYW1lIHByb3AuIFRoaXMgcHJvcCBpc1xuICAgICAgICAvLyBhZGRlZCBhZnRlciB0aGUgZW1vdGlvbiB0cmFuc2xhdGlvbi5cbiAgICAgICAgPEN1c3RvbUNvbXBvbmVudFxuICAgICAgICAgIHsuLi50aGlzLmdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzKCl9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L0N1c3RvbUNvbXBvbmVudD5cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChocmVmKSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgPGFcbiAgICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICAgIGlkPXtnbG9iYWxJRH1cbiAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgIHRhcmdldD17dGFyZ2V0fVxuICAgICAgICAgIGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX1cbiAgICAgICAgICB7Li4uZGF0YXNldH1cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9hPlxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKG9uQ2xpY2spIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgaWQ9e2dsb2JhbElEfVxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICAgIHsuLi5kYXRhc2V0fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8c3BhbiBpZD17Z2xvYmFsSUR9IGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX0gey4uLmRhdGFzZXR9PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaXRlbUJhc2U7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaXNTZWxlY3RlZCwgdG9vbHRpcCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzdHlsZXMgPSB0aGlzLmdlbmVyYXRlU3R5bGVzKCk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxUb29sdGlwXG4gICAgICAgIGRlbGF5PXswfVxuICAgICAgICBjb250ZW50PXtpc1NlbGVjdGVkID8gdW5kZWZpbmVkIDogdG9vbHRpcH1cbiAgICAgICAgcG9zaXRpb249XCJyaWdodFwiXG4gICAgICAgIGhpZGVUb29sdGlwT25DbGlja1xuICAgICAgICBoaWRlVG9vbHRpcE9uTW91c2VEb3duXG4gICAgICA+XG4gICAgICAgIDxkaXYgY3NzPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snIH19PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckNoaWxkcmVuKHN0eWxlcyl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Ub29sdGlwPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgYXMgQmFzZUdsb2JhbE5hdmlnYXRpb25JdGVtUHJpbWl0aXZlIH07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhHbG9iYWxUaGVtZShHbG9iYWxOYXZpZ2F0aW9uSXRlbVByaW1pdGl2ZSk7XG4iXX0= */")
        }, dataset), _this.renderIconAndBadge(styles.badgeWrapper));
      } else if (onClick) {
        itemBase = ___EmotionJSX("button", _extends({
          id: globalID,
          onClick: onClick,
          css:
          /*#__PURE__*/
          _css({
            '&&': styles.itemBase
          }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0dsb2JhbEl0ZW0vcHJpbWl0aXZlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3SFUiLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcHJlc2VudGF0aW9uYWwvR2xvYmFsSXRlbS9wcmltaXRpdmVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVG9vbHRpcCBmcm9tICdAYXRsYXNraXQvdG9vbHRpcCc7XG5cbmltcG9ydCBkZWVwRXF1YWwgZnJvbSAncmVhY3QtZmFzdC1jb21wYXJlJztcbmltcG9ydCB7IHN0eWxlUmVkdWNlck5vT3AsIHdpdGhHbG9iYWxUaGVtZSB9IGZyb20gJy4uLy4uLy4uL3RoZW1lJztcblxuY2xhc3MgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGRhdGFzZXQ6IHtcbiAgICAgICdkYXRhLXRlc3RpZCc6ICdHbG9iYWxOYXZpZ2F0aW9uSXRlbScsXG4gICAgfSxcbiAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgaXNIb3ZlcjogZmFsc2UsXG4gICAgaXNTZWxlY3RlZDogZmFsc2UsXG4gICAgaXNGb2N1c2VkOiBmYWxzZSxcbiAgICBzaXplOiAnbGFyZ2UnLFxuICAgIHN0eWxlczogc3R5bGVSZWR1Y2VyTm9PcCxcbiAgfTtcblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XG4gICAgcmV0dXJuICFkZWVwRXF1YWwodGhpcy5wcm9wcywgbmV4dFByb3BzKTtcbiAgfVxuXG4gIHJlbmRlckljb25BbmRCYWRnZSA9IGJhZGdlV3JhcHBlciA9PiB7XG4gICAgY29uc3QgeyBpY29uOiBJY29uLCBiYWRnZTogQmFkZ2UsIGxhYmVsLCB0b29sdGlwIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0gdGhpcy5nZXRQcmVzZW50YXRpb25Qcm9wcygpO1xuICAgIGlmICghSWNvbiAmJiAhQmFkZ2UpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGljb25MYWJlbCA9IGxhYmVsIHx8ICh0eXBlb2YgdG9vbHRpcCA9PT0gJ3N0cmluZycgPyB0b29sdGlwIDogJycpO1xuICAgIHJldHVybiAoXG4gICAgICA8RnJhZ21lbnQ+XG4gICAgICAgIHshIUljb24gJiYgKFxuICAgICAgICAgIDxkaXYgY3NzPXt7IHBvaW50ZXJFdmVudHM6ICdub25lJyB9fT5cbiAgICAgICAgICAgIDxJY29uIGxhYmVsPXtpY29uTGFiZWx9IHNlY29uZGFyeUNvbG9yPVwiaW5oZXJpdFwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICAgIHshIUJhZGdlICYmIChcbiAgICAgICAgICA8ZGl2IGNzcz17YmFkZ2VXcmFwcGVyfT5cbiAgICAgICAgICAgIDxCYWRnZSB7Li4ucHJlc2VudGF0aW9uUHJvcHN9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L0ZyYWdtZW50PlxuICAgICk7XG4gIH07XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIGdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNGb2N1c2VkLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIHRoZW1lLFxuICAgICAgLi4uZXh0ZXJuYWxQcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGV4dGVybmFsUHJvcHM7XG4gIH07XG5cbiAgZ2V0UHJlc2VudGF0aW9uUHJvcHMgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBpc0FjdGl2ZSwgaXNGb2N1c2VkLCBpc0hvdmVyLCBpc1NlbGVjdGVkLCBzaXplIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIHsgaXNBY3RpdmUsIGlzRm9jdXNlZCwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICB9O1xuXG4gIGdlbmVyYXRlU3R5bGVzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgaXNIb3ZlcixcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBzaXplLFxuICAgICAgc3R5bGVzOiBzdHlsZVJlZHVjZXIsXG4gICAgICB0aGVtZSxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IG1vZGUgfSA9IHRoZW1lO1xuICAgIGNvbnN0IHByZXNlbnRhdGlvblByb3BzID0geyBpc0FjdGl2ZSwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9O1xuICAgIGNvbnN0IGRlZmF1bHRTdHlsZXMgPSBtb2RlLmdsb2JhbEl0ZW0ocHJlc2VudGF0aW9uUHJvcHMpO1xuICAgIHJldHVybiBzdHlsZVJlZHVjZXIoZGVmYXVsdFN0eWxlcywgcHJlc2VudGF0aW9uUHJvcHMpO1xuICB9O1xuXG4gIHJlbmRlckNoaWxkcmVuID0gc3R5bGVzID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBjb21wb25lbnQ6IEN1c3RvbUNvbXBvbmVudCxcbiAgICAgIGRhdGFzZXQsXG4gICAgICBocmVmLFxuICAgICAgaWQsXG4gICAgICBvbkNsaWNrLFxuICAgICAgdGFyZ2V0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGdsb2JhbElEID0gaWQgJiYgYCR7aWR9R2xvYmFsSXRlbWA7XG5cbiAgICBsZXQgaXRlbUJhc2U7XG5cbiAgICBpZiAoQ3VzdG9tQ29tcG9uZW50KSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgLy8gQ3VzdG9tQ29tcG9uZW50IG5lZWRzIGEgY2xhc3NOYW1lIHByb3AuIFRoaXMgcHJvcCBpc1xuICAgICAgICAvLyBhZGRlZCBhZnRlciB0aGUgZW1vdGlvbiB0cmFuc2xhdGlvbi5cbiAgICAgICAgPEN1c3RvbUNvbXBvbmVudFxuICAgICAgICAgIHsuLi50aGlzLmdldEdsb2JhbEl0ZW1FeHRlcm5hbFByb3BzKCl9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L0N1c3RvbUNvbXBvbmVudD5cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChocmVmKSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgPGFcbiAgICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICAgIGlkPXtnbG9iYWxJRH1cbiAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgIHRhcmdldD17dGFyZ2V0fVxuICAgICAgICAgIGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX1cbiAgICAgICAgICB7Li4uZGF0YXNldH1cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9hPlxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKG9uQ2xpY2spIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgaWQ9e2dsb2JhbElEfVxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgY3NzPXt7ICcmJic6IHN0eWxlcy5pdGVtQmFzZSB9fVxuICAgICAgICAgIHsuLi5kYXRhc2V0fVxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVySWNvbkFuZEJhZGdlKHN0eWxlcy5iYWRnZVdyYXBwZXIpfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGl0ZW1CYXNlID0gKFxuICAgICAgICA8c3BhbiBpZD17Z2xvYmFsSUR9IGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX0gey4uLmRhdGFzZXR9PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaXRlbUJhc2U7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaXNTZWxlY3RlZCwgdG9vbHRpcCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzdHlsZXMgPSB0aGlzLmdlbmVyYXRlU3R5bGVzKCk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxUb29sdGlwXG4gICAgICAgIGRlbGF5PXswfVxuICAgICAgICBjb250ZW50PXtpc1NlbGVjdGVkID8gdW5kZWZpbmVkIDogdG9vbHRpcH1cbiAgICAgICAgcG9zaXRpb249XCJyaWdodFwiXG4gICAgICAgIGhpZGVUb29sdGlwT25DbGlja1xuICAgICAgICBoaWRlVG9vbHRpcE9uTW91c2VEb3duXG4gICAgICA+XG4gICAgICAgIDxkaXYgY3NzPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snIH19PlxuICAgICAgICAgIHt0aGlzLnJlbmRlckNoaWxkcmVuKHN0eWxlcyl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Ub29sdGlwPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUgYXMgQmFzZUdsb2JhbE5hdmlnYXRpb25JdGVtUHJpbWl0aXZlIH07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhHbG9iYWxUaGVtZShHbG9iYWxOYXZpZ2F0aW9uSXRlbVByaW1pdGl2ZSk7XG4iXX0= */")
        }, dataset), _this.renderIconAndBadge(styles.badgeWrapper));
      } else {
        itemBase = ___EmotionJSX("span", _extends({
          id: globalID,
          css:
          /*#__PURE__*/
          _css({
            '&&': styles.itemBase
          }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0dsb2JhbEl0ZW0vcHJpbWl0aXZlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnSTRCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0dsb2JhbEl0ZW0vcHJpbWl0aXZlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCwgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRvb2x0aXAgZnJvbSAnQGF0bGFza2l0L3Rvb2x0aXAnO1xuXG5pbXBvcnQgZGVlcEVxdWFsIGZyb20gJ3JlYWN0LWZhc3QtY29tcGFyZSc7XG5pbXBvcnQgeyBzdHlsZVJlZHVjZXJOb09wLCB3aXRoR2xvYmFsVGhlbWUgfSBmcm9tICcuLi8uLi8uLi90aGVtZSc7XG5cbmNsYXNzIEdsb2JhbE5hdmlnYXRpb25JdGVtUHJpbWl0aXZlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBkYXRhc2V0OiB7XG4gICAgICAnZGF0YS10ZXN0aWQnOiAnR2xvYmFsTmF2aWdhdGlvbkl0ZW0nLFxuICAgIH0sXG4gICAgaXNBY3RpdmU6IGZhbHNlLFxuICAgIGlzSG92ZXI6IGZhbHNlLFxuICAgIGlzU2VsZWN0ZWQ6IGZhbHNlLFxuICAgIGlzRm9jdXNlZDogZmFsc2UsXG4gICAgc2l6ZTogJ2xhcmdlJyxcbiAgICBzdHlsZXM6IHN0eWxlUmVkdWNlck5vT3AsXG4gIH07XG5cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcykge1xuICAgIHJldHVybiAhZGVlcEVxdWFsKHRoaXMucHJvcHMsIG5leHRQcm9wcyk7XG4gIH1cblxuICByZW5kZXJJY29uQW5kQmFkZ2UgPSBiYWRnZVdyYXBwZXIgPT4ge1xuICAgIGNvbnN0IHsgaWNvbjogSWNvbiwgYmFkZ2U6IEJhZGdlLCBsYWJlbCwgdG9vbHRpcCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwcmVzZW50YXRpb25Qcm9wcyA9IHRoaXMuZ2V0UHJlc2VudGF0aW9uUHJvcHMoKTtcbiAgICBpZiAoIUljb24gJiYgIUJhZGdlKSByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBpY29uTGFiZWwgPSBsYWJlbCB8fCAodHlwZW9mIHRvb2x0aXAgPT09ICdzdHJpbmcnID8gdG9vbHRpcCA6ICcnKTtcbiAgICByZXR1cm4gKFxuICAgICAgPEZyYWdtZW50PlxuICAgICAgICB7ISFJY29uICYmIChcbiAgICAgICAgICA8ZGl2IGNzcz17eyBwb2ludGVyRXZlbnRzOiAnbm9uZScgfX0+XG4gICAgICAgICAgICA8SWNvbiBsYWJlbD17aWNvbkxhYmVsfSBzZWNvbmRhcnlDb2xvcj1cImluaGVyaXRcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgICB7ISFCYWRnZSAmJiAoXG4gICAgICAgICAgPGRpdiBjc3M9e2JhZGdlV3JhcHBlcn0+XG4gICAgICAgICAgICA8QmFkZ2Ugey4uLnByZXNlbnRhdGlvblByb3BzfSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC9GcmFnbWVudD5cbiAgICApO1xuICB9O1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICBnZXRHbG9iYWxJdGVtRXh0ZXJuYWxQcm9wcyA9ICgpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBpc0FjdGl2ZSxcbiAgICAgIGlzRm9jdXNlZCxcbiAgICAgIGlzSG92ZXIsXG4gICAgICB0aGVtZSxcbiAgICAgIC4uLmV4dGVybmFsUHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiBleHRlcm5hbFByb3BzO1xuICB9O1xuXG4gIGdldFByZXNlbnRhdGlvblByb3BzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgaXNBY3RpdmUsIGlzRm9jdXNlZCwgaXNIb3ZlciwgaXNTZWxlY3RlZCwgc2l6ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiB7IGlzQWN0aXZlLCBpc0ZvY3VzZWQsIGlzSG92ZXIsIGlzU2VsZWN0ZWQsIHNpemUgfTtcbiAgfTtcblxuICBnZW5lcmF0ZVN0eWxlcyA9ICgpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBpc0FjdGl2ZSxcbiAgICAgIGlzSG92ZXIsXG4gICAgICBpc1NlbGVjdGVkLFxuICAgICAgc2l6ZSxcbiAgICAgIHN0eWxlczogc3R5bGVSZWR1Y2VyLFxuICAgICAgdGhlbWUsXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBtb2RlIH0gPSB0aGVtZTtcbiAgICBjb25zdCBwcmVzZW50YXRpb25Qcm9wcyA9IHsgaXNBY3RpdmUsIGlzSG92ZXIsIGlzU2VsZWN0ZWQsIHNpemUgfTtcbiAgICBjb25zdCBkZWZhdWx0U3R5bGVzID0gbW9kZS5nbG9iYWxJdGVtKHByZXNlbnRhdGlvblByb3BzKTtcbiAgICByZXR1cm4gc3R5bGVSZWR1Y2VyKGRlZmF1bHRTdHlsZXMsIHByZXNlbnRhdGlvblByb3BzKTtcbiAgfTtcblxuICByZW5kZXJDaGlsZHJlbiA9IHN0eWxlcyA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgY29tcG9uZW50OiBDdXN0b21Db21wb25lbnQsXG4gICAgICBkYXRhc2V0LFxuICAgICAgaHJlZixcbiAgICAgIGlkLFxuICAgICAgb25DbGljayxcbiAgICAgIHRhcmdldCxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBnbG9iYWxJRCA9IGlkICYmIGAke2lkfUdsb2JhbEl0ZW1gO1xuXG4gICAgbGV0IGl0ZW1CYXNlO1xuXG4gICAgaWYgKEN1c3RvbUNvbXBvbmVudCkge1xuICAgICAgaXRlbUJhc2UgPSAoXG4gICAgICAgIC8vIEN1c3RvbUNvbXBvbmVudCBuZWVkcyBhIGNsYXNzTmFtZSBwcm9wLiBUaGlzIHByb3AgaXNcbiAgICAgICAgLy8gYWRkZWQgYWZ0ZXIgdGhlIGVtb3Rpb24gdHJhbnNsYXRpb24uXG4gICAgICAgIDxDdXN0b21Db21wb25lbnRcbiAgICAgICAgICB7Li4udGhpcy5nZXRHbG9iYWxJdGVtRXh0ZXJuYWxQcm9wcygpfVxuICAgICAgICAgIGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX1cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9DdXN0b21Db21wb25lbnQ+XG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoaHJlZikge1xuICAgICAgaXRlbUJhc2UgPSAoXG4gICAgICAgIDxhXG4gICAgICAgICAgaHJlZj17aHJlZn1cbiAgICAgICAgICBpZD17Z2xvYmFsSUR9XG4gICAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgICB0YXJnZXQ9e3RhcmdldH1cbiAgICAgICAgICBjc3M9e3sgJyYmJzogc3R5bGVzLml0ZW1CYXNlIH19XG4gICAgICAgICAgey4uLmRhdGFzZXR9XG4gICAgICAgID5cbiAgICAgICAgICB7dGhpcy5yZW5kZXJJY29uQW5kQmFkZ2Uoc3R5bGVzLmJhZGdlV3JhcHBlcil9XG4gICAgICAgIDwvYT5cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChvbkNsaWNrKSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGlkPXtnbG9iYWxJRH1cbiAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgIGNzcz17eyAnJiYnOiBzdHlsZXMuaXRlbUJhc2UgfX1cbiAgICAgICAgICB7Li4uZGF0YXNldH1cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLnJlbmRlckljb25BbmRCYWRnZShzdHlsZXMuYmFkZ2VXcmFwcGVyKX1cbiAgICAgICAgPC9idXR0b24+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBpdGVtQmFzZSA9IChcbiAgICAgICAgPHNwYW4gaWQ9e2dsb2JhbElEfSBjc3M9e3sgJyYmJzogc3R5bGVzLml0ZW1CYXNlIH19IHsuLi5kYXRhc2V0fT5cbiAgICAgICAgICB7dGhpcy5yZW5kZXJJY29uQW5kQmFkZ2Uoc3R5bGVzLmJhZGdlV3JhcHBlcil9XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGl0ZW1CYXNlO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGlzU2VsZWN0ZWQsIHRvb2x0aXAgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3Qgc3R5bGVzID0gdGhpcy5nZW5lcmF0ZVN0eWxlcygpO1xuICAgIHJldHVybiAoXG4gICAgICA8VG9vbHRpcFxuICAgICAgICBkZWxheT17MH1cbiAgICAgICAgY29udGVudD17aXNTZWxlY3RlZCA/IHVuZGVmaW5lZCA6IHRvb2x0aXB9XG4gICAgICAgIHBvc2l0aW9uPVwicmlnaHRcIlxuICAgICAgICBoaWRlVG9vbHRpcE9uQ2xpY2tcbiAgICAgICAgaGlkZVRvb2x0aXBPbk1vdXNlRG93blxuICAgICAgPlxuICAgICAgICA8ZGl2IGNzcz17eyBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyB9fT5cbiAgICAgICAgICB7dGhpcy5yZW5kZXJDaGlsZHJlbihzdHlsZXMpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvVG9vbHRpcD5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCB7IEdsb2JhbE5hdmlnYXRpb25JdGVtUHJpbWl0aXZlIGFzIEJhc2VHbG9iYWxOYXZpZ2F0aW9uSXRlbVByaW1pdGl2ZSB9O1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoR2xvYmFsVGhlbWUoR2xvYmFsTmF2aWdhdGlvbkl0ZW1QcmltaXRpdmUpO1xuIl19 */")
        }, dataset), _this.renderIconAndBadge(styles.badgeWrapper));
      }

      return itemBase;
    });

    return _this;
  }

  _createClass(GlobalNavigationItemPrimitive, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return !deepEqual(this.props, nextProps);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props6 = this.props,
          isSelected = _this$props6.isSelected,
          tooltip = _this$props6.tooltip;
      var styles = this.generateStyles();
      return ___EmotionJSX(Tooltip, {
        delay: 0,
        content: isSelected ? undefined : tooltip,
        position: "right",
        hideTooltipOnClick: true,
        hideTooltipOnMouseDown: true
      }, ___EmotionJSX("div", {
        css: _ref2
      }, this.renderChildren(styles)));
    }
  }]);

  return GlobalNavigationItemPrimitive;
}(Component);

_defineProperty(GlobalNavigationItemPrimitive, "defaultProps", {
  dataset: {
    'data-testid': 'GlobalNavigationItem'
  },
  isActive: false,
  isHover: false,
  isSelected: false,
  isFocused: false,
  size: 'large',
  styles: styleReducerNoOp
});

export { GlobalNavigationItemPrimitive as BaseGlobalNavigationItemPrimitive };
export default withGlobalTheme(GlobalNavigationItemPrimitive);