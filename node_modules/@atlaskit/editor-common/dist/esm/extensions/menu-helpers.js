import { __assign } from "tslib";
import { buildAction } from './manifest-helpers';
export var groupBy = function (arr, attr, keyRenamer) {
    return arr.reduce(function (acc, item) {
        acc[keyRenamer(item[attr])] = item;
        return acc;
    }, {});
};
export var buildMenuItem = function (manifest, extensionModule) {
    var title = extensionModule.title || manifest.title;
    var key = manifest.key + ":" + extensionModule.key;
    var node = buildAction(extensionModule.action, manifest);
    if (!node) {
        throw new Error("Couldn't find any action for " + title + " (" + key + ")");
    }
    return {
        key: key,
        title: title,
        extensionType: manifest.type,
        description: extensionModule.description || manifest.description,
        icon: extensionModule.icon || manifest.icons['48'],
        node: node,
    };
};
export var filterByModule = function (manifest, moduleType) {
    var modules = manifest.modules[moduleType];
    return (modules || []).map(function (extensionModule) {
        return buildMenuItem(manifest, extensionModule);
    });
};
var getGroupedMenuItems = function (extensions, moduleType) {
    return extensions.reduce(function (acc, extension) {
        var items = filterByModule(extension, moduleType);
        return __assign(__assign({}, acc), groupBy(items, 'key', function (key) { return key; }));
    }, {});
};
export var getItemsFromModule = function (extensions, moduleType, transformFunction) {
    var groupedMenuItems = getGroupedMenuItems(extensions, moduleType);
    return Object.keys(groupedMenuItems).map(function (key, index) {
        return transformFunction(groupedMenuItems[key], index);
    });
};
//# sourceMappingURL=menu-helpers.js.map