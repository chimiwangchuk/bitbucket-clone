import { __assign, __rest } from "tslib";
/** @jsx jsx */
import { jsx } from '@emotion/core';
import { forwardRef } from 'react';
import { linkItemCSS } from './styles';
import BaseItem from './base-item';
var LinkItem = forwardRef(function (_a, ref) {
    var href = _a.href, rest = __rest(_a, ["href"]);
    var children = rest.children, _b = rest.cssFn, cssFn = _b === void 0 ? function (currentStyles) { return currentStyles; } : _b, description = rest.description, elemAfter = rest.elemAfter, elemBefore = rest.elemBefore, _c = rest.isDisabled, isDisabled = _c === void 0 ? false : _c, _d = rest.isSelected, isSelected = _d === void 0 ? false : _d, onClick = rest.onClick, testId = rest.testId, others = __rest(rest, ["children", "cssFn", "description", "elemAfter", "elemBefore", "isDisabled", "isSelected", "onClick", "testId"]);
    if (!children) {
        return null;
    }
    var Container = isDisabled ? 'span' : 'a';
    return (jsx(Container, __assign({ ref: ref, css: cssFn(linkItemCSS(isDisabled, isSelected), {
            isSelected: isSelected,
            isDisabled: isDisabled,
        }), href: isDisabled ? undefined : href, "data-testid": testId, onClick: isDisabled ? undefined : onClick }, others),
        jsx(BaseItem, { elemBefore: elemBefore, elemAfter: elemAfter, description: description }, children)));
});
export default LinkItem;
//# sourceMappingURL=link-item.js.map