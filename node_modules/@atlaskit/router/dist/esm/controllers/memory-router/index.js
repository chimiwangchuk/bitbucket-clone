import { __assign } from "tslib";
import React from 'react';
import { createMemoryHistory } from 'history';
import { Router } from '../router';
var getRouterProps = function (memoryRouterProps) {
    var _a = memoryRouterProps.isStatic, isStatic = _a === void 0 ? false : _a, routes = memoryRouterProps.routes, resourceData = memoryRouterProps.resourceData, resourceContext = memoryRouterProps.resourceContext, transitionBlocker = memoryRouterProps.transitionBlocker;
    var routerProps = {
        routes: routes,
        isStatic: isStatic,
        transitionBlocker: transitionBlocker,
    };
    if (resourceData) {
        routerProps = __assign(__assign({}, routerProps), { resourceData: resourceData });
    }
    if (resourceContext) {
        routerProps = __assign(__assign({}, routerProps), { resourceContext: resourceContext });
    }
    return routerProps;
};
/**
 * Ensures the router store uses memory history.
 *
 */
export var MemoryRouter = function (props) {
    var location = props.location, children = props.children;
    var config = {};
    if (location) {
        config.initialEntries = [location];
    }
    var history = createMemoryHistory(config);
    var routerProps = getRouterProps(props);
    return (React.createElement(Router, __assign({ history: history }, routerProps), children));
};
//# sourceMappingURL=index.js.map