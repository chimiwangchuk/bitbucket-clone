import { getResourceIdentifier, getResourceIdentifiers, } from '../get-resource-identifier';
import { routeHasChanged, routeHasResources } from '../route-checks';
/**
 * Gets the requestable resources for the next location.
 *
 */
export var getResourcesForNextLocation = function (prevRouterStoreContext, nextRouterStoreContext, resourceStoreContext) {
    var prevRoute = prevRouterStoreContext.route;
    var _a = (prevRoute || {}).resources, prevResources = _a === void 0 ? [] : _a;
    var nextRoute = nextRouterStoreContext.route;
    var _b = (nextRoute || {}).resources, nextResources = _b === void 0 ? [] : _b;
    if (!routeHasResources(nextRoute)) {
        return [];
    }
    if (routeHasChanged(prevRoute, nextRoute)) {
        return nextResources;
    }
    var prevResourceIdentifiers = getResourceIdentifiers(prevResources, prevRouterStoreContext, resourceStoreContext);
    return nextResources.filter(function (resource) {
        return !prevResourceIdentifiers.includes(getResourceIdentifier(resource, nextRouterStoreContext, resourceStoreContext));
    });
};
//# sourceMappingURL=index.js.map