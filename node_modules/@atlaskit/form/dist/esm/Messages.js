import { __makeTemplateObject } from "tslib";
import React from 'react';
import styled from 'styled-components';
import { gridSize } from '@atlaskit/theme/constants';
import { h200 } from '@atlaskit/theme/typography';
import { multiply } from '@atlaskit/theme/math';
import { R400, G400, N200 } from '@atlaskit/theme/colors';
import ErrorIcon from '@atlaskit/icon/glyph/error';
import SuccessIcon from '@atlaskit/icon/glyph/editor/success';
import { FieldId } from './Field';
var Message = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", " font-weight: normal;\n  color: ", ";\n  margin-top: ", "px;\n  display: flex;\n  justify-content: baseline;\n"], ["\n  ", " font-weight: normal;\n  color: ",
    ";\n  margin-top: ", "px;\n  display: flex;\n  justify-content: baseline;\n"])), h200, function (props) {
    if (props.error) {
        return R400;
    }
    if (props.valid) {
        return G400;
    }
    return N200;
}, multiply(gridSize, 0.5));
var IconWrapper = styled.span(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: flex;\n"], ["\n  display: flex;\n"])));
export var HelperMessage = function (_a) {
    var children = _a.children;
    return (React.createElement(FieldId.Consumer, null, function (fieldId) { return (React.createElement(Message, { id: fieldId ? fieldId + "-helper" : undefined }, children)); }));
};
export var ErrorMessage = function (_a) {
    var children = _a.children;
    return (React.createElement(FieldId.Consumer, null, function (fieldId) { return (React.createElement(Message, { error: true, id: fieldId ? fieldId + "-error" : undefined },
        React.createElement(IconWrapper, null,
            React.createElement(ErrorIcon, { size: "small", label: "error" })),
        children)); }));
};
export var ValidMessage = function (_a) {
    var children = _a.children;
    return (React.createElement(FieldId.Consumer, null, function (fieldId) { return (React.createElement(Message, { valid: true, id: fieldId ? fieldId + "-valid" : undefined },
        React.createElement(IconWrapper, null,
            React.createElement(SuccessIcon, { size: "small", label: "success" })),
        children)); }));
};
var templateObject_1, templateObject_2;
//# sourceMappingURL=Messages.js.map