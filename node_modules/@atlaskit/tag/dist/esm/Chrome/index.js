import { __extends } from "tslib";
import React, { PureComponent } from 'react';
import { Span } from './styled';
var Chrome = /** @class */ (function (_super) {
    __extends(Chrome, _super);
    function Chrome() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Chrome.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, isLink = _a.isLink, isRemovable = _a.isRemovable, isRemoved = _a.isRemoved, isRemoving = _a.isRemoving, isRounded = _a.isRounded, isFocused = _a.isFocused, markedForRemoval = _a.markedForRemoval, color = _a.color;
        return (React.createElement(Span, { innerRef: function (r) {
                _this.chromeRef = r;
            }, isRemovable: isRemovable, isRemoved: isRemoved, isRemoving: isRemoving, isRounded: isRounded, markedForRemoval: markedForRemoval, color: color, isFocused: isFocused, isLink: isLink, role: isLink ? 'link' : undefined }, children));
    };
    return Chrome;
}(PureComponent));
export default Chrome;
//# sourceMappingURL=index.js.map