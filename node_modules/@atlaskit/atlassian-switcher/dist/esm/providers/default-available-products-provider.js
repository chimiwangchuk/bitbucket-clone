import { __awaiter, __generator } from "tslib";
import { createProviderWithCustomFetchData, } from './create-data-provider';
import { fetchJson } from '../utils/fetch';
export var DEFAULT_AVAILABLE_PRODUCTS_ENDPOINT = '/gateway/api/worklens/api/available-products';
export var createAvailableProductsProvider = function (url) {
    if (url === void 0) { url = DEFAULT_AVAILABLE_PRODUCTS_ENDPOINT; }
    return createProviderWithCustomFetchData('availableProducts', function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, e_1, defaultUnauthorizedResponse;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, fetchJson(url)];
                case 1:
                    response = _a.sent();
                    return [2 /*return*/, response];
                case 2:
                    e_1 = _a.sent();
                    if (e_1.status === 401) {
                        defaultUnauthorizedResponse = Promise.resolve({ sites: [] });
                        return [2 /*return*/, defaultUnauthorizedResponse];
                    }
                    throw e_1;
                case 3: return [2 /*return*/];
            }
        });
    }); });
};
//# sourceMappingURL=default-available-products-provider.js.map